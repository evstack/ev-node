import{_ as t,c as a,ag as i,o as n}from"./chunks/framework.CmpABV1Y.js";const u=JSON.parse('{"title":"ADR 008: Light Client Transaction Gossip & Mempool","description":"","frontmatter":{"head":[["meta",{"name":"og:title","content":"ADR 008: Light Client Transaction Gossip & Mempool | Evolve"},{"name":"og:description","content":false}]]},"headers":[],"relativePath":"adr/adr-008-mempool-optimint-light-client.md","filePath":"adr/adr-008-mempool-optimint-light-client.md","lastUpdated":1753438408000}'),o={name:"adr/adr-008-mempool-optimint-light-client.md"};function s(l,e,r,c,h,p){return n(),a("div",null,e[0]||(e[0]=[i('<h1 id="adr-008-light-client-transaction-gossip-mempool" tabindex="-1">ADR 008: Light Client Transaction Gossip &amp; Mempool <a class="header-anchor" href="#adr-008-light-client-transaction-gossip-mempool" aria-label="Permalink to &quot;ADR 008: Light Client Transaction Gossip &amp; Mempool&quot;">​</a></h1><h2 id="changelog" tabindex="-1">Changelog <a class="header-anchor" href="#changelog" aria-label="Permalink to &quot;Changelog&quot;">​</a></h2><ul><li>20.09.2022: Initial Draft</li><li>29.09.2022: Rename Optimint to rollmint</li><li>22.01.2023: Rename rollmint to Rollkit</li></ul><h2 id="context" tabindex="-1">Context <a class="header-anchor" href="#context" aria-label="Permalink to &quot;Context&quot;">​</a></h2><p>Rollkit Light Clients cannot validate transactions without a state. Therefore Light Clients should not gossip incoming transactions, and the mempool can be disabled.</p><h3 id="explanation" tabindex="-1">Explanation <a class="header-anchor" href="#explanation" aria-label="Permalink to &quot;Explanation&quot;">​</a></h3><p>There is a wish for the light clients to participate in the P2P Layer. One of the ways a full node participates in the network is to gossip valid transactions throughout the network. Each full node that receives a transaction sends an ABCI message, <code>CheckTx</code>, to the application layer to check for validity and receives an <code>abci.ResponseCheckTx</code> . There are 2 Types of checks. Current stateless checks:</p><ul><li>Check that the size is less than the configured maximum transaction size.</li><li>Call any Pre-Check hooks if defined</li><li>Check if the proxy connection has an error</li><li>Check if the transaction is already in cache / mempool</li></ul><p>Stateful:</p><ul><li>Checks if transactions and messages are valid based on a committed state</li></ul><p>Light clients cannot do stateful checks because they don&#39;t have access to the state. Light clients can do stateless checks. However, creating invalid transactions that pass the current stateless checks is easy. Light clients could therefore support a DOS attack of the network when they gossip invalid transactions. If light clients do not check transactions, they do not need the mempool.</p><h3 id="libp2p-pubsub" tabindex="-1">Libp2p pubsub <a class="header-anchor" href="#libp2p-pubsub" aria-label="Permalink to &quot;Libp2p pubsub&quot;">​</a></h3><p>If the transaction originates from the light client i.e. submitting a new transaction, then this transaction must be gossiped to the network.</p><p>A light client will use the <a href="https://docs.libp2p.io/concepts/publish-subscribe/#fan-out" target="_blank" rel="noreferrer">fan-out</a> functionality of pubsub. It will send its transaction to the network but will not subscribe to receiving and propagating other transactions.</p><h2 id="alternative-approaches" tabindex="-1">Alternative Approaches <a class="header-anchor" href="#alternative-approaches" aria-label="Permalink to &quot;Alternative Approaches&quot;">​</a></h2><ul><li>We create more rigorous stateless checks on the transactions that would reduce or prevent the DOS attack and enable transaction gossiping</li></ul><h2 id="status" tabindex="-1">Status <a class="header-anchor" href="#status" aria-label="Permalink to &quot;Status&quot;">​</a></h2><p>Proposed</p><h2 id="consequences" tabindex="-1">Consequences <a class="header-anchor" href="#consequences" aria-label="Permalink to &quot;Consequences&quot;">​</a></h2><h3 id="positive" tabindex="-1">Positive <a class="header-anchor" href="#positive" aria-label="Permalink to &quot;Positive&quot;">​</a></h3><ul><li>Reduction of complexity and keeping the light client lightweight</li></ul><h3 id="negative" tabindex="-1">Negative <a class="header-anchor" href="#negative" aria-label="Permalink to &quot;Negative&quot;">​</a></h3><ul><li>Light clients do not participate in gossiping transactions</li></ul><h2 id="references" tabindex="-1">References <a class="header-anchor" href="#references" aria-label="Permalink to &quot;References&quot;">​</a></h2><p>Issue #100 <a href="https://github.com/evstack/ev-node/issues/100#issuecomment-921848268" target="_blank" rel="noreferrer">References</a></p>',25)]))}const m=t(o,[["render",s]]);export{u as __pageData,m as default};
