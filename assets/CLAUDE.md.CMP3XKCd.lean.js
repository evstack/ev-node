import{_ as a,c as n,ag as t,o as i}from"./chunks/framework.CmpABV1Y.js";const m=JSON.parse('{"title":"CLAUDE.md","description":"","frontmatter":{"head":[["meta",{"name":"og:title","content":"CLAUDE.md | Evolve"},{"name":"og:description","content":false}]]},"headers":[],"relativePath":"CLAUDE.md","filePath":"CLAUDE.md","lastUpdated":1754474509000}'),l={name:"CLAUDE.md"};function o(s,e,r,c,d,p){return i(),n("div",null,e[0]||(e[0]=[t(`<h1 id="claude-md" tabindex="-1">CLAUDE.md <a class="header-anchor" href="#claude-md" aria-label="Permalink to &quot;CLAUDE.md&quot;">​</a></h1><p>This file provides guidance to Claude Code (claude.ai/code) when working with code in this repository.</p><h2 id="common-development-commands" tabindex="-1">Common Development Commands <a class="header-anchor" href="#common-development-commands" aria-label="Permalink to &quot;Common Development Commands&quot;">​</a></h2><h3 id="local-development" tabindex="-1">Local Development <a class="header-anchor" href="#local-development" aria-label="Permalink to &quot;Local Development&quot;">​</a></h3><ul><li><code>yarn install</code> - Install dependencies</li><li><code>yarn dev</code> - Start VitePress development server (hot reload enabled)</li><li><code>yarn build</code> - Build static documentation site</li><li><code>yarn preview</code> - Preview built site locally</li><li><code>make testlink</code> - Validate all links in markdown files using lychee</li></ul><h3 id="deployment" tabindex="-1">Deployment <a class="header-anchor" href="#deployment" aria-label="Permalink to &quot;Deployment&quot;">​</a></h3><ul><li>Automatic deployment via GitHub Actions on push to main branch</li><li>Preview deployments available for pull requests</li></ul><h2 id="high-level-architecture" tabindex="-1">High-Level Architecture <a class="header-anchor" href="#high-level-architecture" aria-label="Permalink to &quot;High-Level Architecture&quot;">​</a></h2><p>This is a <strong>VitePress-based documentation site</strong> for Evolve. Key architectural elements:</p><h3 id="content-organization" tabindex="-1">Content Organization <a class="header-anchor" href="#content-organization" aria-label="Permalink to &quot;Content Organization&quot;">​</a></h3><div class="language-txt vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>docs/</span></span>
<span class="line"><span>├── .vitepress/config.ts    # Site configuration, navigation, theme</span></span>
<span class="line"><span>├── blog/                   # Blog posts and announcements</span></span>
<span class="line"><span>├── guides/                 # Step-by-step tutorials</span></span>
<span class="line"><span>│   ├── da/                # Data availability guides</span></span>
<span class="line"><span>│   ├── deploy/            # Deployment guides</span></span>
<span class="line"><span>│   ├── evm/               # EVM integration guides</span></span>
<span class="line"><span>│   └── execution/         # Execution layer guides</span></span>
<span class="line"><span>├── learn/                  # Technical documentation</span></span>
<span class="line"><span>│   ├── sequencing/        # Sequencing concepts</span></span>
<span class="line"><span>│   └── specs/             # Technical specifications</span></span>
<span class="line"><span>└── public/                 # Static assets and installation scripts</span></span></code></pre></div><h3 id="key-technical-details" tabindex="-1">Key Technical Details <a class="header-anchor" href="#key-technical-details" aria-label="Permalink to &quot;Key Technical Details&quot;">​</a></h3><ul><li><strong>Static Site Generator</strong>: VitePress with Mermaid diagram support</li><li><strong>Navigation Structure</strong>: Configured in <code>.vitepress/config.ts</code> with collapsible sidebar sections</li><li><strong>Analytics</strong>: Plausible analytics and Chatbase integration</li><li><strong>Content Format</strong>: Markdown files with frontmatter support</li><li><strong>Link Validation</strong>: Automated via <code>make testlink</code> and GitHub Actions</li></ul><h3 id="development-workflow" tabindex="-1">Development Workflow <a class="header-anchor" href="#development-workflow" aria-label="Permalink to &quot;Development Workflow&quot;">​</a></h3><ol><li>Content changes: Edit markdown files in appropriate directories</li><li>Navigation changes: Update <code>.vitepress/config.ts</code></li><li>Test locally with <code>yarn dev</code></li><li>Validate links with <code>make testlink</code></li><li>Create PR - preview deployment will be available</li><li>Merge to main triggers automatic deployment</li></ol><h3 id="important-conventions" tabindex="-1">Important Conventions <a class="header-anchor" href="#important-conventions" aria-label="Permalink to &quot;Important Conventions&quot;">​</a></h3><ul><li>Use relative links for internal documentation references</li><li>Place images in <code>/public/img/</code></li><li>Blog posts should include proper frontmatter with date and author</li><li>Guides should be structured with clear step-by-step instructions</li><li>Technical documentation in <code>/learn</code> should be comprehensive and accurate</li></ul>`,17)]))}const u=a(l,[["render",o]]);export{m as __pageData,u as default};
