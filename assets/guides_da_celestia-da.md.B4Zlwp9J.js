import{c as a}from"./chunks/constants.0YOvycjV.js";import{c as h,ag as n,j as i,t as e,k as t,a as l,o}from"./chunks/framework.CmpABV1Y.js";const p={class:"vp-code-group vp-adaptive-theme"},r={class:"blocks"},d={class:"language-sh vp-adaptive-theme active"},k={class:"shiki shiki-themes github-light github-dark vp-code",tabindex:"0"},g={class:"line"},c={style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},u={class:"line"},F={style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},y={class:"language-sh vp-adaptive-theme"},E={class:"shiki shiki-themes github-light github-dark vp-code",tabindex:"0"},b={class:"line"},C={style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},v={class:"line"},m={style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},f={class:"language-sh vp-adaptive-theme"},B={class:"shiki shiki-themes github-light github-dark vp-code",tabindex:"0"},A={class:"line"},T={style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},D={class:"line"},w={style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},O=JSON.parse('{"title":"Using Celestia as DA","description":"","frontmatter":{"head":[["meta",{"name":"og:title","content":"Using Celestia as DA | Evolve"},{"name":"og:description","content":false}]]},"headers":[],"relativePath":"guides/da/celestia-da.md","filePath":"guides/da/celestia-da.md","lastUpdated":1759477783000}'),_={name:"guides/da/celestia-da.md"},U=Object.assign(_,{setup(N){return(q,s)=>(o(),h("div",null,[s[25]||(s[25]=n('<h1 id="using-celestia-as-da" tabindex="-1">Using Celestia as DA <a class="header-anchor" href="#using-celestia-as-da" aria-label="Permalink to &quot;Using Celestia as DA&quot;">‚Äã</a></h1><h2 id="introduction" tabindex="-1">üåû Introduction <a class="header-anchor" href="#introduction" aria-label="Permalink to &quot;üåû Introduction {#introduction}&quot;">‚Äã</a></h2><p>This tutorial serves as a comprehensive guide for deploying your chain on Celestia&#39;s data availability (DA) network. From the Evolve perspective, there&#39;s no difference in posting blocks to Celestia&#39;s testnets or Mainnet Beta.</p><p>Before proceeding, ensure that you have completed the <a href="./../gm-world">gm-world</a> tutorial, which covers installing the Testapp CLI and running a chain against a local DA network.</p><h2 id="ü™∂-running-a-celestia-light-node" tabindex="-1">ü™∂ Running a Celestia light node <a class="header-anchor" href="#ü™∂-running-a-celestia-light-node" aria-label="Permalink to &quot;ü™∂ Running a Celestia light node&quot;">‚Äã</a></h2><p>Before you can start your chain node, you need to initiate, sync, and fund a light node on one of Celestia&#39;s networks on a compatible version:</p><p>Find more information on how to run a light node in the <a href="https://celestia.org/run-a-light-node/#start-up-a-node" target="_blank" rel="noreferrer">Celestia documentation</a>.</p>',7)),i("div",p,[s[24]||(s[24]=n('<div class="tabs"><input type="radio" name="group-q0ct6" id="tab-7fuZLtP" checked><label data-title="Arabica" for="tab-7fuZLtP">Arabica</label><input type="radio" name="group-q0ct6" id="tab-EoqVrt7"><label data-title="Mocha" for="tab-EoqVrt7">Mocha</label><input type="radio" name="group-q0ct6" id="tab-nYG1Km7"><label data-title="Mainnet" for="tab-nYG1Km7">Mainnet</label></div>',1)),i("div",r,[i("div",d,[s[6]||(s[6]=i("button",{title:"Copy Code",class:"copy"},null,-1)),s[7]||(s[7]=i("span",{class:"lang"},"sh",-1)),i("pre",k,[i("code",null,[i("span",g,[s[0]||(s[0]=i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"Evolve",-1)),s[1]||(s[1]=i("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," Version:",-1)),i("span",c," "+e(t(a).celestiaNodeArabicaEvolveTag),1)]),s[5]||(s[5]=l(`
`)),i("span",u,[s[2]||(s[2]=i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"Celestia",-1)),s[3]||(s[3]=i("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," Node",-1)),s[4]||(s[4]=i("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," Version:",-1)),i("span",F," "+e(t(a).celestiaNodeArabicaTag),1)])])])]),i("div",y,[s[14]||(s[14]=i("button",{title:"Copy Code",class:"copy"},null,-1)),s[15]||(s[15]=i("span",{class:"lang"},"sh",-1)),i("pre",E,[i("code",null,[i("span",b,[s[8]||(s[8]=i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"Evolve",-1)),s[9]||(s[9]=i("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," Version:",-1)),i("span",C," "+e(t(a).celestiaNodeMochaEvolveTag),1)]),s[13]||(s[13]=l(`
`)),i("span",v,[s[10]||(s[10]=i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"Celestia",-1)),s[11]||(s[11]=i("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," Node",-1)),s[12]||(s[12]=i("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," Version:",-1)),i("span",m," "+e(t(a).celestiaNodeMochaTag),1)])])])]),i("div",f,[s[22]||(s[22]=i("button",{title:"Copy Code",class:"copy"},null,-1)),s[23]||(s[23]=i("span",{class:"lang"},"sh",-1)),i("pre",B,[i("code",null,[i("span",A,[s[16]||(s[16]=i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"Evolve",-1)),s[17]||(s[17]=i("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," Version:",-1)),i("span",T," "+e(t(a).celestiaNodeMainnetEvolveTag),1)]),s[21]||(s[21]=l(`
`)),i("span",D,[s[18]||(s[18]=i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"Celestia",-1)),s[19]||(s[19]=i("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," Node",-1)),s[20]||(s[20]=i("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," Version:",-1)),i("span",w," "+e(t(a).celestiaNodeMainnetTag),1)])])])])])]),s[26]||(s[26]=n(`<ul><li><a href="https://docs.celestia.org/how-to-guides/arabica-devnet" target="_blank" rel="noreferrer">Arabica Devnet</a></li><li><a href="https://docs.celestia.org/how-to-guides/mocha-testnet" target="_blank" rel="noreferrer">Mocha Testnet</a></li><li><a href="https://docs.celestia.org/how-to-guides/mainnet" target="_blank" rel="noreferrer">Mainnet Beta</a></li></ul><p>The main difference lies in how you fund your wallet address: using testnet TIA or <a href="https://docs.celestia.org/learn/tia#overview-of-tia" target="_blank" rel="noreferrer">TIA</a> for Mainnet Beta.</p><p>After successfully starting a light node, it&#39;s time to start posting the batches of blocks of data that your chain generates to Celestia.</p><h2 id="prerequisites" tabindex="-1">üèóÔ∏è Prerequisites <a class="header-anchor" href="#prerequisites" aria-label="Permalink to &quot;üèóÔ∏è Prerequisites {#prerequisites}&quot;">‚Äã</a></h2><ul><li><code>gmd</code> CLI installed from the <a href="./../gm-world">gm-world</a> tutorial.</li></ul><h2 id="üõ†Ô∏è-configuring-flags-for-da" tabindex="-1">üõ†Ô∏è Configuring flags for DA <a class="header-anchor" href="#üõ†Ô∏è-configuring-flags-for-da" aria-label="Permalink to &quot;üõ†Ô∏è Configuring flags for DA&quot;">‚Äã</a></h2><p>Now that we are posting to the Celestia DA instead of the local DA, the <code>evolve start</code> command requires three DA configuration flags:</p><ul><li><code>--evnode.da.start_height</code></li><li><code>--evnode.da.auth_token</code></li><li><code>--evnode.da.namespace</code></li></ul><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>Optionally, you could also set the <code>--evnode.da.block_time</code> flag. This should be set to the finality time of the DA layer, not its actual block time, as Evolve does not handle reorganization logic. The default value is 15 seconds.</p></div><p>Let&#39;s determine which values to provide for each of them.</p><p>First, let&#39;s query the DA layer start height using our light node.</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">DA_BLOCK_HEIGHT</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">celestia</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> header</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> network-head</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> jq</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -r</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;.result.header.height&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">echo</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -e</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;\\n Your DA_BLOCK_HEIGHT is </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$DA_BLOCK_HEIGHT</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> \\n&quot;</span></span></code></pre></div><p>The output of the command above will look similar to this:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Your</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> DA_BLOCK_HEIGHT</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> is</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 2127672</span></span></code></pre></div><p>Now, let&#39;s obtain the authentication token of your light node using the following command:</p><div class="vp-code-group vp-adaptive-theme"><div class="tabs"><input type="radio" name="group-wNmho" id="tab-jdl42J3" checked><label data-title="Arabica Devnet" for="tab-jdl42J3">Arabica Devnet</label><input type="radio" name="group-wNmho" id="tab-4UOrQkQ"><label data-title="Mocha Testnet" for="tab-4UOrQkQ">Mocha Testnet</label><input type="radio" name="group-wNmho" id="tab-taZdSW6"><label data-title="Mainnet Beta" for="tab-taZdSW6">Mainnet Beta</label></div><div class="blocks"><div class="language-bash vp-adaptive-theme active"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">AUTH_TOKEN</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">celestia</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> light</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> auth</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> write</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --p2p.network</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> arabica</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">echo</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -e</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;\\n Your DA AUTH_TOKEN is </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$AUTH_TOKEN</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> \\n&quot;</span></span></code></pre></div><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">AUTH_TOKEN</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">celestia</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> light</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> auth</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> write</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --p2p.network</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> mocha</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">echo</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -e</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;\\n Your DA AUTH_TOKEN is </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$AUTH_TOKEN</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> \\n&quot;</span></span></code></pre></div><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">AUTH_TOKEN</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">celestia</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> light</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> auth</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> write</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">echo</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -e</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;\\n Your DA AUTH_TOKEN is </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$AUTH_TOKEN</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> \\n&quot;</span></span></code></pre></div></div></div><p>The output of the command above will look similar to this:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Your</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> DA</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> AUTH_TOKEN</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> is</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJBbGxvdyI6WyJwdWJsaWMiLCJyZWFkIiwid3JpdGUiXX0.cSrJjpfUdTNFtzGho69V0D_8kyECn9Mzv8ghJSpKRDE</span></span></code></pre></div><p>Next, let&#39;s set up the namespace to be used for posting data on Celestia. Evolve supports separate namespaces for headers and data, but for simplicity, we&#39;ll use a single namespace for both:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">DA_NAMESPACE</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;fancy_namespace&quot;</span></span></code></pre></div><p><strong>Advanced Configuration:</strong> For production deployments, you can use separate namespaces for headers and data to optimize syncing:</p><ul><li><code>--evnode.da.header_namespace</code> for block headers</li><li><code>--evnode.da.data_namespace</code> for transaction data</li></ul><p>The namespace values are automatically encoded by the node to ensure compatibility with Celestia.</p><p><a href="https://docs.celestia.org/tutorials/node-tutorial#namespaces" target="_blank" rel="noreferrer">Learn more about namespaces</a>. :::</p><p>Lastly, set your DA address for your light node, which by default runs at port 26658:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">DA_ADDRESS</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">http://localhost:26658</span></span></code></pre></div><h2 id="üî•-running-your-chain-connected-to-celestia-light-node" tabindex="-1">üî• Running your chain connected to Celestia light node <a class="header-anchor" href="#üî•-running-your-chain-connected-to-celestia-light-node" aria-label="Permalink to &quot;üî• Running your chain connected to Celestia light node&quot;">‚Äã</a></h2><p>Finally, let&#39;s initiate the chain node with all the flags:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">gmd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> start</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    --evnode.node.aggregator</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    --evnode.da.auth_token</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> $AUTH_TOKEN </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    --evnode.da.header_namespace</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> $DA_NAMESPACE </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    --evnode.da.data_namespace</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> $DA_NAMESPACE </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    --evnode.da.address</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> $DA_ADDRESS</span></span></code></pre></div><p>Now, the chain is running and posting blocks (aggregated in batches) to Celestia. You can view your chain by using your namespace or account on one of Celestia&#39;s block explorers.</p><p>For example, <a href="https://arabica.celenium.io/" target="_blank" rel="noreferrer">here on Celenium for Arabica</a>.</p><p>Other explorers:</p><ul><li><a href="https://docs.celestia.org/how-to-guides/arabica-devnet" target="_blank" rel="noreferrer">Arabica testnet</a></li><li><a href="https://docs.celestia.org/how-to-guides/mocha-testnet" target="_blank" rel="noreferrer">Mocha testnet</a></li><li><a href="https://docs.celestia.org/how-to-guides/mainnet" target="_blank" rel="noreferrer">Mainnet Beta</a></li></ul><h2 id="üéâ-next-steps" tabindex="-1">üéâ Next steps <a class="header-anchor" href="#üéâ-next-steps" aria-label="Permalink to &quot;üéâ Next steps&quot;">‚Äã</a></h2><p>Congratulations! You&#39;ve built a local chain that posts data to Celestia&#39;s DA layer. Well done! Now, go forth and build something great! Good luck!</p>`,35))]))}});export{O as __pageData,U as default};
