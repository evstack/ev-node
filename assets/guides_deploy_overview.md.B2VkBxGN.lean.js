import{_ as t,c as o,ag as a,o as n}from"./chunks/framework.DlgP5dhN.js";const u=JSON.parse('{"title":"🚀 Deploying Your Chain","description":"This page provides an overview of some common ways to deploy chains.","frontmatter":{"description":"This page provides an overview of some common ways to deploy chains.","head":[["meta",{"name":"og:title","content":"🚀 Deploying Your Chain | Evolve"},{"name":"og:description","content":false}]]},"headers":[],"relativePath":"guides/deploy/overview.md","filePath":"guides/deploy/overview.md","lastUpdated":1758576573000}'),i={name:"guides/deploy/overview.md"};function l(r,e,s,d,p,h){return n(),o("div",null,e[0]||(e[0]=[a('<h1 id="🚀-deploying-your-chain" tabindex="-1">🚀 Deploying Your Chain <a class="header-anchor" href="#🚀-deploying-your-chain" aria-label="Permalink to &quot;🚀 Deploying Your Chain&quot;">​</a></h1><p>One of the benefits of building chains with Evolve is the flexibility you have as a developer to choose things like the DA layer, the settlement scheme, and the execution environment.</p><p>You can learn more about Evolve architecture <a href="./../../learn/specs/overview">here</a>.</p><p>The challenge that comes with this flexibility is that there are more services that now need to be deployed and managed while running your chain.</p><p>In the tutorials so far, you&#39;ve seen various helper scripts used to make things easier. While great for tutorials, there are better ways to deploy and manage chains than using various bash scripts.</p><h2 id="🏗️-deployment-scales" tabindex="-1">🏗️ Deployment Scales <a class="header-anchor" href="#🏗️-deployment-scales" aria-label="Permalink to &quot;🏗️ Deployment Scales&quot;">​</a></h2><p>Depending on your needs and the stage of your chain development, there are different deployment approaches you can take:</p><h3 id="🏠-local-development" tabindex="-1">🏠 Local Development <a class="header-anchor" href="#🏠-local-development" aria-label="Permalink to &quot;🏠 Local Development&quot;">​</a></h3><p>For development and testing purposes, you can deploy your chain locally using containerized environments. This approach provides:</p><ul><li>Quick iteration and testing</li><li>No external dependencies</li><li>Full control over the environment</li><li>Cost-effective development</li></ul><h3 id="🌐-testnet-deployment" tabindex="-1">🌐 Testnet Deployment <a class="header-anchor" href="#🌐-testnet-deployment" aria-label="Permalink to &quot;🌐 Testnet Deployment&quot;">​</a></h3><p>When you&#39;re ready to test with real network conditions, you can deploy to testnet environments. This includes:</p><ul><li>Integration with testnet DA networks</li><li>Real network latency and conditions</li><li>Multi-node testing scenarios</li><li>Pre-production validation</li></ul><h2 id="📚-available-deployment-guides" tabindex="-1">📚 Available Deployment Guides <a class="header-anchor" href="#📚-available-deployment-guides" aria-label="Permalink to &quot;📚 Available Deployment Guides&quot;">​</a></h2><p>Choose the deployment approach that matches your current needs:</p><ul><li><a href="./testnet">🌐 Testnet Deployment</a> - Deploy on testnet with external DA networks</li></ul><div class="warning custom-block"><p class="custom-block-title">Disclaimer</p><p>These examples are for educational purposes only. Before deploying your chain for production use you should fully understand the services you are deploying and your choice in deployment method.</p></div><h2 id="🎉-next-steps" tabindex="-1">🎉 Next Steps <a class="header-anchor" href="#🎉-next-steps" aria-label="Permalink to &quot;🎉 Next Steps&quot;">​</a></h2><p>For production mainnet deployments, consider additional requirements such as monitoring, security audits, infrastructure hardening, and operational procedures that go beyond the scope of these tutorials.</p>',19)]))}const m=t(i,[["render",l]]);export{u as __pageData,m as default};
