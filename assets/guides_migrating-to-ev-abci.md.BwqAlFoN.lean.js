import{_ as i,c as a,ag as t,o as n}from"./chunks/framework.CmpABV1Y.js";const g=JSON.parse('{"title":"Migrating an Existing Chain to ev-abci","description":"","frontmatter":{"head":[["meta",{"name":"og:title","content":"Migrating an Existing Chain to ev-abci | Evolve"},{"name":"og:description","content":false}]]},"headers":[],"relativePath":"guides/migrating-to-ev-abci.md","filePath":"guides/migrating-to-ev-abci.md","lastUpdated":1761825467000}'),e={name:"guides/migrating-to-ev-abci.md"};function h(l,s,p,r,k,o){return n(),a("div",null,s[0]||(s[0]=[t(`<h1 id="migrating-an-existing-chain-to-ev-abci" tabindex="-1">Migrating an Existing Chain to ev-abci <a class="header-anchor" href="#migrating-an-existing-chain-to-ev-abci" aria-label="Permalink to &quot;Migrating an Existing Chain to ev-abci&quot;">​</a></h1><p>This guide is for developers of existing Cosmos SDK chains who want to replace their node&#39;s default CometBFT consensus engine with the <code>ev-abci</code> implementation. By following these steps, you will migrate your chain to run as an <code>ev-abci</code> node while preserving chain state.</p><h2 id="overview-of-migration-process" tabindex="-1">Overview of Migration Process <a class="header-anchor" href="#overview-of-migration-process" aria-label="Permalink to &quot;Overview of Migration Process&quot;">​</a></h2><p>The migration process involves the following key phases:</p><ol><li><strong>Code Preparation:</strong> Add migration module, staking wrapper, and upgrade handler to your existing chain</li><li><strong>Governance Proposal:</strong> Create and pass a governance proposal to initiate the migration</li><li><strong>State Export:</strong> Export the current chain state at the designated upgrade height</li><li><strong>Node Reconfiguration:</strong> Wire the <code>ev-abci</code> start handler into your node&#39;s entrypoint</li><li><strong>Migration Execution:</strong> Run <code>appd evolve-migrate</code> to transform the exported state</li><li><strong>Chain Restart:</strong> Start the new <code>ev-abci</code> node with the migrated state</li></ol><p>This document will guide you through each phase.</p><hr><h2 id="phase-1-code-preparation-add-migration-module-and-staking-wrapper" tabindex="-1">Phase 1: Code Preparation - Add Migration Module and Staking Wrapper <a class="header-anchor" href="#phase-1-code-preparation-add-migration-module-and-staking-wrapper" aria-label="Permalink to &quot;Phase 1: Code Preparation - Add Migration Module and Staking Wrapper&quot;">​</a></h2><p>The first step prepares your existing chain for migration by integrating the necessary modules.</p><h3 id="step-1-add-migration-manager-module" tabindex="-1">Step 1: Add Migration Manager Module <a class="header-anchor" href="#step-1-add-migration-manager-module" aria-label="Permalink to &quot;Step 1: Add Migration Manager Module&quot;">​</a></h3><p>Add the <code>migrationmngr</code> module to your application. This module manages the transition from a PoS validator set to a sequencer-based model.</p><p><em>Note: For detailed information about the migration manager, please refer to the <a href="https://github.com/evstack/ev-abci/tree/main/modules/migrationmngr" target="_blank" rel="noreferrer">migration manager documentation</a>.</em></p><p>In your <code>app.go</code> file:</p><ol><li>Import the migration manager module:</li></ol><div class="language-go vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">go</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">	// ...</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	migrationmngr </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">github.com/evstack/ev-abci/modules/migrationmngr</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	migrationmngrkeeper </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">github.com/evstack/ev-abci/modules/migrationmngr/keeper</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	migrationmngrtypes </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">github.com/evstack/ev-abci/modules/migrationmngr/types</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">	// ...</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><ol start="2"><li>Add the migration manager keeper to your app struct</li><li>Register the module in your module manager</li><li>Configure the migration manager in your app initialization</li></ol><h3 id="step-2-replace-staking-module-with-wrapper" tabindex="-1">Step 2: Replace Staking Module with Wrapper <a class="header-anchor" href="#step-2-replace-staking-module-with-wrapper" aria-label="Permalink to &quot;Step 2: Replace Staking Module with Wrapper&quot;">​</a></h3><p><strong>Goal:</strong> Ensure the <code>migrationmngr</code> module is the <em>sole</em> source of validator set updates during migration.</p><p>Replace the standard Cosmos SDK <code>x/staking</code> module with the <strong>staking wrapper module</strong> provided in <code>ev-abci</code>. The wrapper&#39;s <code>EndBlock</code> method prevents validator updates from the staking module, delegating that responsibility to the <code>migrationmngr</code> module during migration.</p><p>In your <code>app.go</code> file (and any other files that import the staking module):</p><p><strong>Replace this:</strong></p><div class="language-go vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">go</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">	// ...</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">	&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">github.com/cosmos/cosmos-sdk/x/staking</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	stakingkeeper </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">github.com/cosmos/cosmos-sdk/x/staking/keeper</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	stakingtypes </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">github.com/cosmos/cosmos-sdk/x/staking/types</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">	// ...</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p><strong>With this:</strong></p><div class="language-go vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">go</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">	// ...</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">	&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">github.com/evstack/ev-abci/modules/staking</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> // The wrapper module</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	stakingkeeper </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">github.com/evstack/ev-abci/modules/staking/keeper</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	stakingtypes </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">github.com/cosmos/cosmos-sdk/x/staking/types</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> // Staking types remain the same</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">	// ...</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>By changing the import path, your application will automatically use the wrapper module. No other changes to your <code>EndBlocker</code> method are needed.</p><hr><h2 id="phase-2-create-upgrade-handler" tabindex="-1">Phase 2: Create Upgrade Handler <a class="header-anchor" href="#phase-2-create-upgrade-handler" aria-label="Permalink to &quot;Phase 2: Create Upgrade Handler&quot;">​</a></h2><p>Create an upgrade handler in your <code>app.go</code> that will be triggered when the governance proposal is executed.</p><div class="language-go vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">go</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">func</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">app </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">App</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">setupUpgradeHandlers</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	app.UpgradeKeeper.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">SetUpgradeHandler</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">		&quot;v2-migrate-to-evolve&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Upgrade name must match governance proposal</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">		func</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">ctx</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> sdk</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Context</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">plan</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> upgradetypes</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Plan</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">fromVM</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> module</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">VersionMap</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) (</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">module</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">VersionMap</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">error</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">			// The upgrade handler can initialize state for the migration manager if needed</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">			// The actual migration will happen during the evolve-migrate step</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">			return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> app.mm.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">RunMigrations</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(ctx, app.configurator, fromVM)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">		},</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>Call this function in your app initialization code in <code>app.go</code>.</p><hr><h2 id="phase-3-create-governance-proposal-for-migration" tabindex="-1">Phase 3: Create Governance Proposal for Migration <a class="header-anchor" href="#phase-3-create-governance-proposal-for-migration" aria-label="Permalink to &quot;Phase 3: Create Governance Proposal for Migration&quot;">​</a></h2><p>Create and submit a software upgrade governance proposal to initiate the migration at a specific block height.</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Create the governance proposal</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">appd</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> tx gov submit-proposal software-upgrade v2-migrate-to-evolve </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  --title</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;Migrate to Evolve&quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  --description</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;Upgrade chain to use ev-abci consensus&quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  --upgrade-height</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">target-heigh</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">t</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  --from</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">your-ke</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">y</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  --chain-id</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">chain-i</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">d</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Vote on the proposal (repeat for validators to reach quorum)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">appd</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> tx gov vote </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">proposal-id</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> yes --from </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">validator-key</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span></code></pre></div><p>Wait for the proposal to pass and for the chain to reach the upgrade height. The chain will halt at the specified height, waiting for the upgrade to be applied.</p><h3 id="trigger-migration-to-evolve" tabindex="-1">Trigger Migration to Evolve <a class="header-anchor" href="#trigger-migration-to-evolve" aria-label="Permalink to &quot;Trigger Migration to Evolve&quot;">​</a></h3><p>After the upgrade proposal has passed, submit the <code>MsgMigrateToEvolve</code> message to initiate the actual migration process. This can be done through a governance proposal or directly if your chain&#39;s authority allows it.</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Submit MsgMigrateToEvolve governance proposal (if using governance)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">appd</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> tx gov submit-proposal migrate-to-evolve </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  --title</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;Trigger Migration to Evolve&quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  --description</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;Execute migration to ev-abci consensus&quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  --from</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">your-ke</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">y</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  --chain-id</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">chain-i</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">d</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Or submit directly if authority allows (authority address depends on your chain configuration)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">appd</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> tx migrationmngr migrate-to-evolve </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  --from</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">authority-ke</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">y</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  --chain-id</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">chain-i</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">d</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span></code></pre></div><p>Once this message is processed, the migration manager module will handle the transition from the PoS validator set to the sequencer-based model.</p><hr><h2 id="phase-4-wire-ev-abci-start-handler-in-root-go" tabindex="-1">Phase 4: Wire ev-abci Start Handler in root.go <a class="header-anchor" href="#phase-4-wire-ev-abci-start-handler-in-root-go" aria-label="Permalink to &quot;Phase 4: Wire ev-abci Start Handler in root.go&quot;">​</a></h2><p><strong>⚠️ Important:</strong> Complete this phase BEFORE the chain halts at the upgrade height. Do NOT start your node yet - you will start it in Phase 6 after running the migration command.</p><p>Modify your node&#39;s entrypoint to use the <code>ev-abci</code> server commands.</p><h3 id="locate-your-application-s-entrypoint" tabindex="-1">Locate Your Application&#39;s Entrypoint <a class="header-anchor" href="#locate-your-application-s-entrypoint" aria-label="Permalink to &quot;Locate Your Application&#39;s Entrypoint&quot;">​</a></h3><p>Open the main entrypoint file for your chain&#39;s binary, usually found at <code>cmd/&lt;your-app-name&gt;/main.go</code> or <code>root.go</code>.</p><h3 id="modify-the-start-command" tabindex="-1">Modify the Start Command <a class="header-anchor" href="#modify-the-start-command" aria-label="Permalink to &quot;Modify the Start Command&quot;">​</a></h3><p>Add the <code>ev-abci</code> start handler to your root command. This is similar to the <a href="https://github.com/ignite/apps/blob/main/evolve/template/init.go#L48-L60" target="_blank" rel="noreferrer">Ignite Apps evolve template</a>.</p><div class="language-go vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">go</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// cmd/&lt;appd&gt;/main.go (or root.go)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">package</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> main</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">	&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">os</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">	&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">github.com/cosmos/cosmos-sdk/server</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">	&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">github.com/spf13/cobra</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">	// Import the ev-abci server package</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	evabci_server </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">github.com/evstack/ev-abci/server</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">	&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">&lt;your-app-path&gt;/app</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">func</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> main</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	rootCmd </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &amp;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">cobra</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Command</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">		Use:   </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;&lt;appd&gt;&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">		Short: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Your App Daemon (ev-abci enabled)&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">	// Keep existing commands (keys, export, etc.)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	server.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">AddCommands</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(rootCmd, app.DefaultNodeHome, app.New, app.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">MakeEncodingConfig</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(), tx.DefaultSignModes)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">	// --- Wire ev-abci start handler ---</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	startCmd </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &amp;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">cobra</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Command</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">		Use:   </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;start&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">		Short: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Run the full node with ev-abci&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">		RunE: </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">func</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">cmd</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> *</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">cobra</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Command</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">_</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> []</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">string</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">error</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">			return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> server.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Start</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(cmd, evabci_server.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">StartHandler</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">())</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">		},</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	evabci_server.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">AddFlags</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(startCmd)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	rootCmd.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">AddCommand</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(startCmd)</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">	// --- End of ev-abci changes ---</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">	if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> err </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> rootCmd.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Execute</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(); err </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">!=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> nil</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">		server.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">HandleError</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(err)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">		os.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Exit</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	}</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h3 id="build-your-application" tabindex="-1">Build Your Application <a class="header-anchor" href="#build-your-application" aria-label="Permalink to &quot;Build Your Application&quot;">​</a></h3><p>Re-build your application&#39;s binary with the updated code:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">go</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> build</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -o</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">app</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">d</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ./cmd/</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">app</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">d</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span></code></pre></div><p><strong>⚠️ Important:</strong> Do NOT start the node yet. Proceed directly to Phase 5 to run the migration command.</p><hr><h2 id="phase-5-run-evolve-migrate" tabindex="-1">Phase 5: Run evolve-migrate <a class="header-anchor" href="#phase-5-run-evolve-migrate" aria-label="Permalink to &quot;Phase 5: Run evolve-migrate&quot;">​</a></h2><p>After the chain halts at the upgrade height, run the migration command to transform the CometBFT data to Evolve format.</p><p><strong>⚠️ Critical:</strong> The node must NOT be running when you execute this command. Ensure all node processes are stopped before proceeding.</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Run the migration command</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">appd</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> evolve-migrate</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Optional: specify the DA height for the Evolve state (defaults to 1)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">appd</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> evolve-migrate --da-height </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">height</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span></code></pre></div><p>The <code>evolve-migrate</code> command performs the following operations:</p><ol><li><strong>Migrates all blocks</strong> from the CometBFT blockstore to the Evolve store</li><li><strong>Converts the CometBFT state</strong> to Evolve state format</li><li><strong>Creates <code>ev_genesis.json</code></strong> - a minimal genesis file that the node will automatically detect and use on subsequent startups</li><li><strong>Saves state</strong> to the ABCI execution store for compatibility</li><li><strong>Seeds sync stores</strong> with the latest migrated header and data</li><li><strong>Cleans up migration state</strong> from the application database</li></ol><p><strong>Important Notes:</strong></p><ul><li>The migration processes blocks in reverse order (from latest to earliest)</li><li>If blocks are missing (e.g., due to pruning), they will be skipped. Migration stops if more than the configured maximum number of blocks are missing</li><li>Vote extensions are not supported in Evolve - if they were enabled in your chain, they will have no effect after migration</li><li>The command operates on the data in your node&#39;s home directory (e.g., <code>~/.appd/data/</code>)</li><li>After successful migration, the <code>ev_genesis.json</code> file will be used automatically on node restart</li></ul><hr><h2 id="phase-6-start-new-ev-abci-node" tabindex="-1">Phase 6: Start New ev-abci Node <a class="header-anchor" href="#phase-6-start-new-ev-abci-node" aria-label="Permalink to &quot;Phase 6: Start New ev-abci Node&quot;">​</a></h2><p>Start your node with the migrated state:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">appd</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> start</span></span></code></pre></div><p>Verify that the node starts successfully:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Check that ev-abci flags are available</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">appd</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> start --help</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># You should see flags like:</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># --ev-node.attester-mode</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># --ev-node.aggregator</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># --ev-node.sequencer-url</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># etc.</span></span></code></pre></div><p>Your node is now running with <code>ev-abci</code> instead of CometBFT. The chain continues from the same state but with the new consensus engine.</p><hr><h2 id="summary" tabindex="-1">Summary <a class="header-anchor" href="#summary" aria-label="Permalink to &quot;Summary&quot;">​</a></h2><p>The migration process follows these key phases:</p><ol><li><strong>Code Preparation:</strong> Modify your chain code to add the migration manager module and staking wrapper</li><li><strong>Create Upgrade Handler:</strong> Define the upgrade logic that will be triggered by governance</li><li><strong>Governance Proposal:</strong> Submit and pass a software upgrade proposal</li><li><strong>Wire Start Handler:</strong> Update your node&#39;s entrypoint to use the <code>ev-abci</code> start command</li><li><strong>Execute Migration:</strong> Run <code>appd evolve-migrate</code> to transform the exported state</li><li><strong>Restart Chain:</strong> Start the new <code>ev-abci</code> node with the migrated state</li></ol><p>This approach ensures a smooth migration with minimal downtime and preserves all chain state and history.</p>`,73)]))}const c=i(e,[["render",h]]);export{g as __pageData,c as default};
