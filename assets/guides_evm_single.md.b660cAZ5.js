import{_ as i,c as s,ag as a,o as t}from"./chunks/framework.CmpABV1Y.js";const k=JSON.parse('{"title":"Evolve EVM Single Sequencer Setup Guide","description":"","frontmatter":{"head":[["meta",{"name":"og:title","content":"Evolve EVM Single Sequencer Setup Guide | Evolve"},{"name":"og:description","content":false}]]},"headers":[],"relativePath":"guides/evm/single.md","filePath":"guides/evm/single.md","lastUpdated":1755602703000}'),n={name:"guides/evm/single.md"};function l(h,e,o,r,d,p){return t(),s("div",null,e[0]||(e[0]=[a(`<h1 id="evolve-evm-single-sequencer-setup-guide" tabindex="-1">Evolve EVM Single Sequencer Setup Guide <a class="header-anchor" href="#evolve-evm-single-sequencer-setup-guide" aria-label="Permalink to &quot;Evolve EVM Single Sequencer Setup Guide&quot;">​</a></h1><h2 id="introduction" tabindex="-1">Introduction <a class="header-anchor" href="#introduction" aria-label="Permalink to &quot;Introduction&quot;">​</a></h2><p>This guide covers how to set up and run the Single Sequencer implementation of Evolve EVM chains. This implementation provides a centralized approach to transaction sequencing while using EVM as the execution layer.</p><h2 id="prerequisites" tabindex="-1">Prerequisites <a class="header-anchor" href="#prerequisites" aria-label="Permalink to &quot;Prerequisites&quot;">​</a></h2><p>Before starting, ensure you have:</p><ul><li>Go 1.20 or later</li><li>Docker and Docker Compose</li><li>Access to the ev-node and ev-reth repositories</li><li>Git</li></ul><h2 id="setting-up-the-environment" tabindex="-1">Setting Up the Environment <a class="header-anchor" href="#setting-up-the-environment" aria-label="Permalink to &quot;Setting Up the Environment&quot;">​</a></h2><h3 id="_1-clone-the-evolve-repository" tabindex="-1">1. Clone the Evolve Repository <a class="header-anchor" href="#_1-clone-the-evolve-repository" aria-label="Permalink to &quot;1. Clone the Evolve Repository&quot;">​</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> clone</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --depth</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --branch</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> {{constants.evolveLatestTag}}</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> https://github.com/evstack/ev-node.git</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> evolve</span></span></code></pre></div><h3 id="_2-build-the-evolve-evm-single-sequencer-implementation" tabindex="-1">2. Build the Evolve EVM Single Sequencer Implementation <a class="header-anchor" href="#_2-build-the-evolve-evm-single-sequencer-implementation" aria-label="Permalink to &quot;2. Build the Evolve EVM Single Sequencer Implementation&quot;">​</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">make</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> build-evm-single</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">make</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> build-da</span></span></code></pre></div><p>This will create the following binaries in the <code>build</code> directory:</p><ul><li><code>evm-single</code> - Single sequencer implementation</li><li><code>local-da</code> - Local data availability node for testing</li></ul><h2 id="setting-up-the-data-availability-da-layer" tabindex="-1">Setting Up the Data Availability (DA) Layer <a class="header-anchor" href="#setting-up-the-data-availability-da-layer" aria-label="Permalink to &quot;Setting Up the Data Availability (DA) Layer&quot;">​</a></h2><h3 id="start-the-local-da-node" tabindex="-1">Start the Local DA Node <a class="header-anchor" href="#start-the-local-da-node" aria-label="Permalink to &quot;Start the Local DA Node&quot;">​</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> build</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">./local-da</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> start</span></span></code></pre></div><p>This will start a local DA node on the default port (26658).</p><h2 id="setting-up-the-evm-layer" tabindex="-1">Setting Up the EVM Layer <a class="header-anchor" href="#setting-up-the-evm-layer" aria-label="Permalink to &quot;Setting Up the EVM Layer&quot;">​</a></h2><h3 id="_1-clone-the-ev-node-repository" tabindex="-1">1. Clone the ev-node Repository <a class="header-anchor" href="#_1-clone-the-ev-node-repository" aria-label="Permalink to &quot;1. Clone the ev-node Repository&quot;">​</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> clone</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> https://github.com/evstack/ev-node.git</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ev-node</span></span></code></pre></div><h3 id="_2-start-the-evm-layer-using-docker-compose" tabindex="-1">2. Start the EVM Layer Using Docker Compose <a class="header-anchor" href="#_2-start-the-evm-layer-using-docker-compose" aria-label="Permalink to &quot;2. Start the EVM Layer Using Docker Compose&quot;">​</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> compose</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> up</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -d</span></span></code></pre></div><p>This will start Reth (Rust Ethereum client) with the appropriate configuration for Evolve.</p><h3 id="_3-note-the-jwt-secret-path" tabindex="-1">3. Note the JWT Secret Path <a class="header-anchor" href="#_3-note-the-jwt-secret-path" aria-label="Permalink to &quot;3. Note the JWT Secret Path&quot;">​</a></h3><p>The JWT secret is typically located at <code>ev-node/execution/evm/docker/jwttoken/jwt.hex</code>. You&#39;ll need this path for the sequencer configuration.</p><h2 id="running-the-single-sequencer-implementation" tabindex="-1">Running the Single Sequencer Implementation <a class="header-anchor" href="#running-the-single-sequencer-implementation" aria-label="Permalink to &quot;Running the Single Sequencer Implementation&quot;">​</a></h2><h3 id="_1-initialize-the-sequencer" tabindex="-1">1. Initialize the Sequencer <a class="header-anchor" href="#_1-initialize-the-sequencer" aria-label="Permalink to &quot;1. Initialize the Sequencer&quot;">​</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> build</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">./evm-single</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> init</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --evnode.node.aggregator=true</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --evnode.signer.passphrase</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> secret</span></span></code></pre></div><h3 id="_2-start-the-sequencer" tabindex="-1">2. Start the Sequencer <a class="header-anchor" href="#_2-start-the-sequencer" aria-label="Permalink to &quot;2. Start the Sequencer&quot;">​</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">./evm-single</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> start</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  --evm.jwt-secret</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> $(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">cat</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /path/to/ev-node/execution/evm/docker/jwttoken/jwt.hex</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  --evm.genesis-hash</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0x0a962a0d163416829894c89cb604ae422323bcdf02d7ea08b94d68d3e026a380</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  --evnode.node.block_time</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 1s</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  --evnode.node.aggregator=true</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  --evnode.signer.passphrase</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> secret</span></span></code></pre></div><p>Replace <code>/path/to/</code> with the actual path to your ev-node repository.</p><h2 id="setting-up-a-full-node" tabindex="-1">Setting Up a Full Node <a class="header-anchor" href="#setting-up-a-full-node" aria-label="Permalink to &quot;Setting Up a Full Node&quot;">​</a></h2><p>To run a full node alongside your sequencer, follow these steps:</p><h3 id="_1-initialize-a-new-node-directory" tabindex="-1">1. Initialize a New Node Directory <a class="header-anchor" href="#_1-initialize-a-new-node-directory" aria-label="Permalink to &quot;1. Initialize a New Node Directory&quot;">​</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">./evm-single</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> init</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --home</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ~/.evolve/evm-single-fullnode</span></span></code></pre></div><h3 id="_2-copy-the-genesis-file" tabindex="-1">2. Copy the Genesis File <a class="header-anchor" href="#_2-copy-the-genesis-file" aria-label="Permalink to &quot;2. Copy the Genesis File&quot;">​</a></h3><p>Copy the genesis file from the sequencer node to the full node:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">cp</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ~/.evolve/evm-single/config/genesis.json</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ~/.evolve/evm-single-fullnode/config/</span></span></code></pre></div><h3 id="_3-get-the-sequencer-s-p2p-address" tabindex="-1">3. Get the Sequencer&#39;s P2P Address <a class="header-anchor" href="#_3-get-the-sequencer-s-p2p-address" aria-label="Permalink to &quot;3. Get the Sequencer&#39;s P2P Address&quot;">​</a></h3><p>Find the sequencer&#39;s P2P address in its logs. It will look similar to:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">INF</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> listening</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> on</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> address=/ip4/127.0.0.1/tcp/26659/p2p/12D3KooWXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX</span></span></code></pre></div><h3 id="_4-start-the-full-node" tabindex="-1">4. Start the Full Node <a class="header-anchor" href="#_4-start-the-full-node" aria-label="Permalink to &quot;4. Start the Full Node&quot;">​</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">./evm-single</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> start</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  --home</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ~/.evolve/evm-single-fullnode</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  --evm.jwt-secret</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> $(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">cat</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /path/to/ev-node/execution/evm/docker/jwttoken/jwt.hex</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  --evm.genesis-hash</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0x0a962a0d163416829894c89cb604ae422323bcdf02d7ea08b94d68d3e026a380</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  --evnode.node.block_time</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 1s</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  --evnode.node.aggregator=false</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  --evnode.p2p.peers</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">SEQUENCER_P2P_I</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">D</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">@127.0.0.1:26659</span></span></code></pre></div><p>Replace <code>&lt;SEQUENCER_P2P_ID&gt;</code> with the actual P2P ID from your sequencer&#39;s logs.</p><h2 id="verifying-node-operation" tabindex="-1">Verifying Node Operation <a class="header-anchor" href="#verifying-node-operation" aria-label="Permalink to &quot;Verifying Node Operation&quot;">​</a></h2><p>After starting your nodes, you should see logs indicating successful block processing:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">INF</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> block</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> marked</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> as</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> DA</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> included</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> blockHash=XXXX</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> blockHeight=XX</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> module=BlockManager</span></span></code></pre></div><h2 id="configuration-reference" tabindex="-1">Configuration Reference <a class="header-anchor" href="#configuration-reference" aria-label="Permalink to &quot;Configuration Reference&quot;">​</a></h2><h3 id="common-flags" tabindex="-1">Common Flags <a class="header-anchor" href="#common-flags" aria-label="Permalink to &quot;Common Flags&quot;">​</a></h3><table tabindex="0"><thead><tr><th>Flag</th><th>Description</th></tr></thead><tbody><tr><td><code>--evnode.node.aggregator</code></td><td>Set to true for sequencer mode, false for full node</td></tr><tr><td><code>--evnode.signer.passphrase</code></td><td>Passphrase for the signer</td></tr><tr><td><code>--evnode.node.block_time</code></td><td>Block time for the Evolve node</td></tr></tbody></table><h3 id="evm-flags" tabindex="-1">EVM Flags <a class="header-anchor" href="#evm-flags" aria-label="Permalink to &quot;EVM Flags&quot;">​</a></h3><table tabindex="0"><thead><tr><th>Flag</th><th>Description</th></tr></thead><tbody><tr><td><code>--evm.eth-url</code></td><td>Ethereum JSON-RPC URL (default <code>http://localhost:8545</code>)</td></tr><tr><td><code>--evm.engine-url</code></td><td>Engine API URL (default <code>http://localhost:8551</code>)</td></tr><tr><td><code>--evm.jwt-secret</code></td><td>JWT secret file path for the Engine API</td></tr><tr><td><code>--evm.genesis-hash</code></td><td>Genesis block hash of the chain</td></tr><tr><td><code>--evm.fee-recipient</code></td><td>Address to receive priority fees</td></tr></tbody></table><h2 id="conclusion" tabindex="-1">Conclusion <a class="header-anchor" href="#conclusion" aria-label="Permalink to &quot;Conclusion&quot;">​</a></h2><p>You&#39;ve now set up and configured the Single Sequencer implementation of Evolve EVM chains. This implementation provides a centralized approach to transaction sequencing while using EVM as the execution layer.</p>`,54)]))}const g=i(n,[["render",l]]);export{k as __pageData,g as default};
