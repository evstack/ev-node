// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        (unknown)
// source: rollkit/rollkit.proto

package rollkit

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Version captures the consensus rules for processing a block in the blockchain,
// including all blockchain data structures and the rules of the application's
// state transition machine.
// This is equivalent to the tmversion.Consensus type in Tendermint.
type Version struct {
	state            protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Block uint64                 `protobuf:"varint,1,opt,name=block,proto3"`
	xxx_hidden_App   uint64                 `protobuf:"varint,2,opt,name=app,proto3"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *Version) Reset() {
	*x = Version{}
	mi := &file_rollkit_rollkit_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Version) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Version) ProtoMessage() {}

func (x *Version) ProtoReflect() protoreflect.Message {
	mi := &file_rollkit_rollkit_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *Version) GetBlock() uint64 {
	if x != nil {
		return x.xxx_hidden_Block
	}
	return 0
}

func (x *Version) GetApp() uint64 {
	if x != nil {
		return x.xxx_hidden_App
	}
	return 0
}

func (x *Version) SetBlock(v uint64) {
	x.xxx_hidden_Block = v
}

func (x *Version) SetApp(v uint64) {
	x.xxx_hidden_App = v
}

type Version_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Block uint64
	App   uint64
}

func (b0 Version_builder) Build() *Version {
	m0 := &Version{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Block = b.Block
	x.xxx_hidden_App = b.App
	return m0
}

type Header struct {
	state                      protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Version         *Version               `protobuf:"bytes,1,opt,name=version,proto3"`
	xxx_hidden_Height          uint64                 `protobuf:"varint,2,opt,name=height,proto3"`
	xxx_hidden_Time            uint64                 `protobuf:"varint,3,opt,name=time,proto3"`
	xxx_hidden_LastHeaderHash  []byte                 `protobuf:"bytes,4,opt,name=last_header_hash,json=lastHeaderHash,proto3"`
	xxx_hidden_LastCommitHash  []byte                 `protobuf:"bytes,5,opt,name=last_commit_hash,json=lastCommitHash,proto3"`
	xxx_hidden_DataHash        []byte                 `protobuf:"bytes,6,opt,name=data_hash,json=dataHash,proto3"`
	xxx_hidden_ConsensusHash   []byte                 `protobuf:"bytes,7,opt,name=consensus_hash,json=consensusHash,proto3"`
	xxx_hidden_AppHash         []byte                 `protobuf:"bytes,8,opt,name=app_hash,json=appHash,proto3"`
	xxx_hidden_LastResultsHash []byte                 `protobuf:"bytes,9,opt,name=last_results_hash,json=lastResultsHash,proto3"`
	xxx_hidden_ProposerAddress []byte                 `protobuf:"bytes,10,opt,name=proposer_address,json=proposerAddress,proto3"`
	xxx_hidden_ValidatorHash   []byte                 `protobuf:"bytes,11,opt,name=validator_hash,json=validatorHash,proto3"`
	xxx_hidden_ChainId         string                 `protobuf:"bytes,12,opt,name=chain_id,json=chainId,proto3"`
	unknownFields              protoimpl.UnknownFields
	sizeCache                  protoimpl.SizeCache
}

func (x *Header) Reset() {
	*x = Header{}
	mi := &file_rollkit_rollkit_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Header) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Header) ProtoMessage() {}

func (x *Header) ProtoReflect() protoreflect.Message {
	mi := &file_rollkit_rollkit_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *Header) GetVersion() *Version {
	if x != nil {
		return x.xxx_hidden_Version
	}
	return nil
}

func (x *Header) GetHeight() uint64 {
	if x != nil {
		return x.xxx_hidden_Height
	}
	return 0
}

func (x *Header) GetTime() uint64 {
	if x != nil {
		return x.xxx_hidden_Time
	}
	return 0
}

func (x *Header) GetLastHeaderHash() []byte {
	if x != nil {
		return x.xxx_hidden_LastHeaderHash
	}
	return nil
}

func (x *Header) GetLastCommitHash() []byte {
	if x != nil {
		return x.xxx_hidden_LastCommitHash
	}
	return nil
}

func (x *Header) GetDataHash() []byte {
	if x != nil {
		return x.xxx_hidden_DataHash
	}
	return nil
}

func (x *Header) GetConsensusHash() []byte {
	if x != nil {
		return x.xxx_hidden_ConsensusHash
	}
	return nil
}

func (x *Header) GetAppHash() []byte {
	if x != nil {
		return x.xxx_hidden_AppHash
	}
	return nil
}

func (x *Header) GetLastResultsHash() []byte {
	if x != nil {
		return x.xxx_hidden_LastResultsHash
	}
	return nil
}

func (x *Header) GetProposerAddress() []byte {
	if x != nil {
		return x.xxx_hidden_ProposerAddress
	}
	return nil
}

func (x *Header) GetValidatorHash() []byte {
	if x != nil {
		return x.xxx_hidden_ValidatorHash
	}
	return nil
}

func (x *Header) GetChainId() string {
	if x != nil {
		return x.xxx_hidden_ChainId
	}
	return ""
}

func (x *Header) SetVersion(v *Version) {
	x.xxx_hidden_Version = v
}

func (x *Header) SetHeight(v uint64) {
	x.xxx_hidden_Height = v
}

func (x *Header) SetTime(v uint64) {
	x.xxx_hidden_Time = v
}

func (x *Header) SetLastHeaderHash(v []byte) {
	if v == nil {
		v = []byte{}
	}
	x.xxx_hidden_LastHeaderHash = v
}

func (x *Header) SetLastCommitHash(v []byte) {
	if v == nil {
		v = []byte{}
	}
	x.xxx_hidden_LastCommitHash = v
}

func (x *Header) SetDataHash(v []byte) {
	if v == nil {
		v = []byte{}
	}
	x.xxx_hidden_DataHash = v
}

func (x *Header) SetConsensusHash(v []byte) {
	if v == nil {
		v = []byte{}
	}
	x.xxx_hidden_ConsensusHash = v
}

func (x *Header) SetAppHash(v []byte) {
	if v == nil {
		v = []byte{}
	}
	x.xxx_hidden_AppHash = v
}

func (x *Header) SetLastResultsHash(v []byte) {
	if v == nil {
		v = []byte{}
	}
	x.xxx_hidden_LastResultsHash = v
}

func (x *Header) SetProposerAddress(v []byte) {
	if v == nil {
		v = []byte{}
	}
	x.xxx_hidden_ProposerAddress = v
}

func (x *Header) SetValidatorHash(v []byte) {
	if v == nil {
		v = []byte{}
	}
	x.xxx_hidden_ValidatorHash = v
}

func (x *Header) SetChainId(v string) {
	x.xxx_hidden_ChainId = v
}

func (x *Header) HasVersion() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Version != nil
}

func (x *Header) ClearVersion() {
	x.xxx_hidden_Version = nil
}

type Header_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Block and App version
	Version *Version
	// Block height
	Height uint64
	// Block creation time
	Time uint64
	// Previous block info
	LastHeaderHash []byte
	// Commit from aggregator(s) from the last block
	LastCommitHash []byte
	// Block.Data root aka Transactions
	DataHash []byte
	// Consensus params for current block
	ConsensusHash []byte
	// State after applying txs from the current block
	AppHash []byte
	// Root hash of all results from the txs from the previous block.
	// This is ABCI specific but smart-contract chains require some way of committing
	// to transaction receipts/results.
	LastResultsHash []byte
	// Original proposer of the block
	// Note that the address can be derived from the pubkey which can be derived
	// from the signature when using secp256k.
	// We keep this in case users choose another signature format where the
	// pubkey can't be recovered by the signature (e.g. ed25519).
	ProposerAddress []byte
	// validatorhash for compatibility with tendermint light client.
	ValidatorHash []byte
	// Chain ID the block belongs to
	ChainId string
}

func (b0 Header_builder) Build() *Header {
	m0 := &Header{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Version = b.Version
	x.xxx_hidden_Height = b.Height
	x.xxx_hidden_Time = b.Time
	x.xxx_hidden_LastHeaderHash = b.LastHeaderHash
	x.xxx_hidden_LastCommitHash = b.LastCommitHash
	x.xxx_hidden_DataHash = b.DataHash
	x.xxx_hidden_ConsensusHash = b.ConsensusHash
	x.xxx_hidden_AppHash = b.AppHash
	x.xxx_hidden_LastResultsHash = b.LastResultsHash
	x.xxx_hidden_ProposerAddress = b.ProposerAddress
	x.xxx_hidden_ValidatorHash = b.ValidatorHash
	x.xxx_hidden_ChainId = b.ChainId
	return m0
}

type SignedHeader struct {
	state                 protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Header     *Header                `protobuf:"bytes,1,opt,name=header,proto3"`
	xxx_hidden_Signature  []byte                 `protobuf:"bytes,2,opt,name=signature,proto3"`
	xxx_hidden_Validators *ValidatorSet          `protobuf:"bytes,3,opt,name=validators,proto3"`
	unknownFields         protoimpl.UnknownFields
	sizeCache             protoimpl.SizeCache
}

func (x *SignedHeader) Reset() {
	*x = SignedHeader{}
	mi := &file_rollkit_rollkit_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SignedHeader) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignedHeader) ProtoMessage() {}

func (x *SignedHeader) ProtoReflect() protoreflect.Message {
	mi := &file_rollkit_rollkit_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *SignedHeader) GetHeader() *Header {
	if x != nil {
		return x.xxx_hidden_Header
	}
	return nil
}

func (x *SignedHeader) GetSignature() []byte {
	if x != nil {
		return x.xxx_hidden_Signature
	}
	return nil
}

func (x *SignedHeader) GetValidators() *ValidatorSet {
	if x != nil {
		return x.xxx_hidden_Validators
	}
	return nil
}

func (x *SignedHeader) SetHeader(v *Header) {
	x.xxx_hidden_Header = v
}

func (x *SignedHeader) SetSignature(v []byte) {
	if v == nil {
		v = []byte{}
	}
	x.xxx_hidden_Signature = v
}

func (x *SignedHeader) SetValidators(v *ValidatorSet) {
	x.xxx_hidden_Validators = v
}

func (x *SignedHeader) HasHeader() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Header != nil
}

func (x *SignedHeader) HasValidators() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Validators != nil
}

func (x *SignedHeader) ClearHeader() {
	x.xxx_hidden_Header = nil
}

func (x *SignedHeader) ClearValidators() {
	x.xxx_hidden_Validators = nil
}

type SignedHeader_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Header     *Header
	Signature  []byte
	Validators *ValidatorSet
}

func (b0 SignedHeader_builder) Build() *SignedHeader {
	m0 := &SignedHeader{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Header = b.Header
	x.xxx_hidden_Signature = b.Signature
	x.xxx_hidden_Validators = b.Validators
	return m0
}

// ValidatorSet defines a set of validators.
type ValidatorSet struct {
	state                       protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Validators       *[]*Validator          `protobuf:"bytes,1,rep,name=validators,proto3"`
	xxx_hidden_Proposer         *Validator             `protobuf:"bytes,2,opt,name=proposer,proto3"`
	xxx_hidden_TotalVotingPower int64                  `protobuf:"varint,3,opt,name=total_voting_power,json=totalVotingPower,proto3"`
	unknownFields               protoimpl.UnknownFields
	sizeCache                   protoimpl.SizeCache
}

func (x *ValidatorSet) Reset() {
	*x = ValidatorSet{}
	mi := &file_rollkit_rollkit_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ValidatorSet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidatorSet) ProtoMessage() {}

func (x *ValidatorSet) ProtoReflect() protoreflect.Message {
	mi := &file_rollkit_rollkit_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ValidatorSet) GetValidators() []*Validator {
	if x != nil {
		if x.xxx_hidden_Validators != nil {
			return *x.xxx_hidden_Validators
		}
	}
	return nil
}

func (x *ValidatorSet) GetProposer() *Validator {
	if x != nil {
		return x.xxx_hidden_Proposer
	}
	return nil
}

func (x *ValidatorSet) GetTotalVotingPower() int64 {
	if x != nil {
		return x.xxx_hidden_TotalVotingPower
	}
	return 0
}

func (x *ValidatorSet) SetValidators(v []*Validator) {
	x.xxx_hidden_Validators = &v
}

func (x *ValidatorSet) SetProposer(v *Validator) {
	x.xxx_hidden_Proposer = v
}

func (x *ValidatorSet) SetTotalVotingPower(v int64) {
	x.xxx_hidden_TotalVotingPower = v
}

func (x *ValidatorSet) HasProposer() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Proposer != nil
}

func (x *ValidatorSet) ClearProposer() {
	x.xxx_hidden_Proposer = nil
}

type ValidatorSet_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Validators       []*Validator
	Proposer         *Validator
	TotalVotingPower int64
}

func (b0 ValidatorSet_builder) Build() *ValidatorSet {
	m0 := &ValidatorSet{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Validators = &b.Validators
	x.xxx_hidden_Proposer = b.Proposer
	x.xxx_hidden_TotalVotingPower = b.TotalVotingPower
	return m0
}

// Validator represents a node participating in the consensus protocol.
type Validator struct {
	state                       protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Address          []byte                 `protobuf:"bytes,1,opt,name=address,proto3"`
	xxx_hidden_PubKey           *PublicKey             `protobuf:"bytes,2,opt,name=pub_key,json=pubKey,proto3"`
	xxx_hidden_VotingPower      int64                  `protobuf:"varint,3,opt,name=voting_power,json=votingPower,proto3"`
	xxx_hidden_ProposerPriority int64                  `protobuf:"varint,4,opt,name=proposer_priority,json=proposerPriority,proto3"`
	xxx_hidden_PubKeyBytes      []byte                 `protobuf:"bytes,5,opt,name=pub_key_bytes,json=pubKeyBytes,proto3"`
	xxx_hidden_PubKeyType       string                 `protobuf:"bytes,6,opt,name=pub_key_type,json=pubKeyType,proto3"`
	unknownFields               protoimpl.UnknownFields
	sizeCache                   protoimpl.SizeCache
}

func (x *Validator) Reset() {
	*x = Validator{}
	mi := &file_rollkit_rollkit_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Validator) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Validator) ProtoMessage() {}

func (x *Validator) ProtoReflect() protoreflect.Message {
	mi := &file_rollkit_rollkit_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *Validator) GetAddress() []byte {
	if x != nil {
		return x.xxx_hidden_Address
	}
	return nil
}

func (x *Validator) GetPubKey() *PublicKey {
	if x != nil {
		return x.xxx_hidden_PubKey
	}
	return nil
}

func (x *Validator) GetVotingPower() int64 {
	if x != nil {
		return x.xxx_hidden_VotingPower
	}
	return 0
}

func (x *Validator) GetProposerPriority() int64 {
	if x != nil {
		return x.xxx_hidden_ProposerPriority
	}
	return 0
}

func (x *Validator) GetPubKeyBytes() []byte {
	if x != nil {
		return x.xxx_hidden_PubKeyBytes
	}
	return nil
}

func (x *Validator) GetPubKeyType() string {
	if x != nil {
		return x.xxx_hidden_PubKeyType
	}
	return ""
}

func (x *Validator) SetAddress(v []byte) {
	if v == nil {
		v = []byte{}
	}
	x.xxx_hidden_Address = v
}

func (x *Validator) SetPubKey(v *PublicKey) {
	x.xxx_hidden_PubKey = v
}

func (x *Validator) SetVotingPower(v int64) {
	x.xxx_hidden_VotingPower = v
}

func (x *Validator) SetProposerPriority(v int64) {
	x.xxx_hidden_ProposerPriority = v
}

func (x *Validator) SetPubKeyBytes(v []byte) {
	if v == nil {
		v = []byte{}
	}
	x.xxx_hidden_PubKeyBytes = v
}

func (x *Validator) SetPubKeyType(v string) {
	x.xxx_hidden_PubKeyType = v
}

func (x *Validator) HasPubKey() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_PubKey != nil
}

func (x *Validator) ClearPubKey() {
	x.xxx_hidden_PubKey = nil
}

type Validator_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Address          []byte
	PubKey           *PublicKey
	VotingPower      int64
	ProposerPriority int64
	PubKeyBytes      []byte
	PubKeyType       string
}

func (b0 Validator_builder) Build() *Validator {
	m0 := &Validator{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Address = b.Address
	x.xxx_hidden_PubKey = b.PubKey
	x.xxx_hidden_VotingPower = b.VotingPower
	x.xxx_hidden_ProposerPriority = b.ProposerPriority
	x.xxx_hidden_PubKeyBytes = b.PubKeyBytes
	x.xxx_hidden_PubKeyType = b.PubKeyType
	return m0
}

type PublicKey struct {
	state               protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_KeyBytes []byte                 `protobuf:"bytes,1,opt,name=key_bytes,json=keyBytes,proto3"`
	xxx_hidden_Type     string                 `protobuf:"bytes,2,opt,name=type,proto3"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *PublicKey) Reset() {
	*x = PublicKey{}
	mi := &file_rollkit_rollkit_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PublicKey) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PublicKey) ProtoMessage() {}

func (x *PublicKey) ProtoReflect() protoreflect.Message {
	mi := &file_rollkit_rollkit_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *PublicKey) GetKeyBytes() []byte {
	if x != nil {
		return x.xxx_hidden_KeyBytes
	}
	return nil
}

func (x *PublicKey) GetType() string {
	if x != nil {
		return x.xxx_hidden_Type
	}
	return ""
}

func (x *PublicKey) SetKeyBytes(v []byte) {
	if v == nil {
		v = []byte{}
	}
	x.xxx_hidden_KeyBytes = v
}

func (x *PublicKey) SetType(v string) {
	x.xxx_hidden_Type = v
}

type PublicKey_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	KeyBytes []byte
	Type     string
}

func (b0 PublicKey_builder) Build() *PublicKey {
	m0 := &PublicKey{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_KeyBytes = b.KeyBytes
	x.xxx_hidden_Type = b.Type
	return m0
}

type Metadata struct {
	state                   protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_ChainId      string                 `protobuf:"bytes,1,opt,name=chain_id,json=chainId,proto3"`
	xxx_hidden_Height       uint64                 `protobuf:"varint,2,opt,name=height,proto3"`
	xxx_hidden_Time         uint64                 `protobuf:"varint,3,opt,name=time,proto3"`
	xxx_hidden_LastDataHash []byte                 `protobuf:"bytes,4,opt,name=last_data_hash,json=lastDataHash,proto3"`
	unknownFields           protoimpl.UnknownFields
	sizeCache               protoimpl.SizeCache
}

func (x *Metadata) Reset() {
	*x = Metadata{}
	mi := &file_rollkit_rollkit_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Metadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Metadata) ProtoMessage() {}

func (x *Metadata) ProtoReflect() protoreflect.Message {
	mi := &file_rollkit_rollkit_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *Metadata) GetChainId() string {
	if x != nil {
		return x.xxx_hidden_ChainId
	}
	return ""
}

func (x *Metadata) GetHeight() uint64 {
	if x != nil {
		return x.xxx_hidden_Height
	}
	return 0
}

func (x *Metadata) GetTime() uint64 {
	if x != nil {
		return x.xxx_hidden_Time
	}
	return 0
}

func (x *Metadata) GetLastDataHash() []byte {
	if x != nil {
		return x.xxx_hidden_LastDataHash
	}
	return nil
}

func (x *Metadata) SetChainId(v string) {
	x.xxx_hidden_ChainId = v
}

func (x *Metadata) SetHeight(v uint64) {
	x.xxx_hidden_Height = v
}

func (x *Metadata) SetTime(v uint64) {
	x.xxx_hidden_Time = v
}

func (x *Metadata) SetLastDataHash(v []byte) {
	if v == nil {
		v = []byte{}
	}
	x.xxx_hidden_LastDataHash = v
}

type Metadata_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Rollup chain id
	ChainId string
	// Block height
	Height uint64
	// Block creation time
	Time uint64
	// Previous block info
	LastDataHash []byte
}

func (b0 Metadata_builder) Build() *Metadata {
	m0 := &Metadata{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_ChainId = b.ChainId
	x.xxx_hidden_Height = b.Height
	x.xxx_hidden_Time = b.Time
	x.xxx_hidden_LastDataHash = b.LastDataHash
	return m0
}

type Data struct {
	state               protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Metadata *Metadata              `protobuf:"bytes,1,opt,name=metadata,proto3"`
	xxx_hidden_Txs      [][]byte               `protobuf:"bytes,2,rep,name=txs,proto3"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *Data) Reset() {
	*x = Data{}
	mi := &file_rollkit_rollkit_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Data) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Data) ProtoMessage() {}

func (x *Data) ProtoReflect() protoreflect.Message {
	mi := &file_rollkit_rollkit_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *Data) GetMetadata() *Metadata {
	if x != nil {
		return x.xxx_hidden_Metadata
	}
	return nil
}

func (x *Data) GetTxs() [][]byte {
	if x != nil {
		return x.xxx_hidden_Txs
	}
	return nil
}

func (x *Data) SetMetadata(v *Metadata) {
	x.xxx_hidden_Metadata = v
}

func (x *Data) SetTxs(v [][]byte) {
	x.xxx_hidden_Txs = v
}

func (x *Data) HasMetadata() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Metadata != nil
}

func (x *Data) ClearMetadata() {
	x.xxx_hidden_Metadata = nil
}

type Data_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Metadata *Metadata
	Txs      [][]byte
}

func (b0 Data_builder) Build() *Data {
	m0 := &Data{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Metadata = b.Metadata
	x.xxx_hidden_Txs = b.Txs
	return m0
}

type TxWithISRs struct {
	state              protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_PreIsr  []byte                 `protobuf:"bytes,1,opt,name=pre_isr,json=preIsr,proto3"`
	xxx_hidden_Tx      []byte                 `protobuf:"bytes,2,opt,name=tx,proto3"`
	xxx_hidden_PostIsr []byte                 `protobuf:"bytes,3,opt,name=post_isr,json=postIsr,proto3"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *TxWithISRs) Reset() {
	*x = TxWithISRs{}
	mi := &file_rollkit_rollkit_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TxWithISRs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TxWithISRs) ProtoMessage() {}

func (x *TxWithISRs) ProtoReflect() protoreflect.Message {
	mi := &file_rollkit_rollkit_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *TxWithISRs) GetPreIsr() []byte {
	if x != nil {
		return x.xxx_hidden_PreIsr
	}
	return nil
}

func (x *TxWithISRs) GetTx() []byte {
	if x != nil {
		return x.xxx_hidden_Tx
	}
	return nil
}

func (x *TxWithISRs) GetPostIsr() []byte {
	if x != nil {
		return x.xxx_hidden_PostIsr
	}
	return nil
}

func (x *TxWithISRs) SetPreIsr(v []byte) {
	if v == nil {
		v = []byte{}
	}
	x.xxx_hidden_PreIsr = v
}

func (x *TxWithISRs) SetTx(v []byte) {
	if v == nil {
		v = []byte{}
	}
	x.xxx_hidden_Tx = v
}

func (x *TxWithISRs) SetPostIsr(v []byte) {
	if v == nil {
		v = []byte{}
	}
	x.xxx_hidden_PostIsr = v
}

type TxWithISRs_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	PreIsr  []byte
	Tx      []byte
	PostIsr []byte
}

func (b0 TxWithISRs_builder) Build() *TxWithISRs {
	m0 := &TxWithISRs{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_PreIsr = b.PreIsr
	x.xxx_hidden_Tx = b.Tx
	x.xxx_hidden_PostIsr = b.PostIsr
	return m0
}

var File_rollkit_rollkit_proto protoreflect.FileDescriptor

var file_rollkit_rollkit_proto_rawDesc = string([]byte{
	0x0a, 0x15, 0x72, 0x6f, 0x6c, 0x6c, 0x6b, 0x69, 0x74, 0x2f, 0x72, 0x6f, 0x6c, 0x6c, 0x6b, 0x69,
	0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x07, 0x72, 0x6f, 0x6c, 0x6c, 0x6b, 0x69, 0x74,
	0x22, 0x31, 0x0a, 0x07, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x62,
	0x6c, 0x6f, 0x63, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x62, 0x6c, 0x6f, 0x63,
	0x6b, 0x12, 0x10, 0x0a, 0x03, 0x61, 0x70, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03,
	0x61, 0x70, 0x70, 0x22, 0xac, 0x03, 0x0a, 0x06, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x2a,
	0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x10, 0x2e, 0x72, 0x6f, 0x6c, 0x6c, 0x6b, 0x69, 0x74, 0x2e, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x65,
	0x69, 0x67, 0x68, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x68, 0x65, 0x69, 0x67,
	0x68, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x28, 0x0a, 0x10, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x68,
	0x65, 0x61, 0x64, 0x65, 0x72, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x0e, 0x6c, 0x61, 0x73, 0x74, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x48, 0x61, 0x73, 0x68,
	0x12, 0x28, 0x0a, 0x10, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x5f,
	0x68, 0x61, 0x73, 0x68, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0e, 0x6c, 0x61, 0x73, 0x74,
	0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x48, 0x61, 0x73, 0x68, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x61,
	0x74, 0x61, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x08, 0x64,
	0x61, 0x74, 0x61, 0x48, 0x61, 0x73, 0x68, 0x12, 0x25, 0x0a, 0x0e, 0x63, 0x6f, 0x6e, 0x73, 0x65,
	0x6e, 0x73, 0x75, 0x73, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x0d, 0x63, 0x6f, 0x6e, 0x73, 0x65, 0x6e, 0x73, 0x75, 0x73, 0x48, 0x61, 0x73, 0x68, 0x12, 0x19,
	0x0a, 0x08, 0x61, 0x70, 0x70, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x07, 0x61, 0x70, 0x70, 0x48, 0x61, 0x73, 0x68, 0x12, 0x2a, 0x0a, 0x11, 0x6c, 0x61, 0x73,
	0x74, 0x5f, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x0f, 0x6c, 0x61, 0x73, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x73, 0x48, 0x61, 0x73, 0x68, 0x12, 0x29, 0x0a, 0x10, 0x70, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x65,
	0x72, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x0f, 0x70, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x12, 0x25, 0x0a, 0x0e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x5f, 0x68, 0x61,
	0x73, 0x68, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0d, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61,
	0x74, 0x6f, 0x72, 0x48, 0x61, 0x73, 0x68, 0x12, 0x19, 0x0a, 0x08, 0x63, 0x68, 0x61, 0x69, 0x6e,
	0x5f, 0x69, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x68, 0x61, 0x69, 0x6e,
	0x49, 0x64, 0x22, 0x8c, 0x01, 0x0a, 0x0c, 0x53, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x48, 0x65, 0x61,
	0x64, 0x65, 0x72, 0x12, 0x27, 0x0a, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x72, 0x6f, 0x6c, 0x6c, 0x6b, 0x69, 0x74, 0x2e, 0x48, 0x65,
	0x61, 0x64, 0x65, 0x72, 0x52, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x1c, 0x0a, 0x09,
	0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x35, 0x0a, 0x0a, 0x76, 0x61,
	0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15,
	0x2e, 0x72, 0x6f, 0x6c, 0x6c, 0x6b, 0x69, 0x74, 0x2e, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74,
	0x6f, 0x72, 0x53, 0x65, 0x74, 0x52, 0x0a, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72,
	0x73, 0x22, 0xa0, 0x01, 0x0a, 0x0c, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x53,
	0x65, 0x74, 0x12, 0x32, 0x0a, 0x0a, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x72, 0x6f, 0x6c, 0x6c, 0x6b, 0x69, 0x74,
	0x2e, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x52, 0x0a, 0x76, 0x61, 0x6c, 0x69,
	0x64, 0x61, 0x74, 0x6f, 0x72, 0x73, 0x12, 0x2e, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x70, 0x6f, 0x73,
	0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x72, 0x6f, 0x6c, 0x6c, 0x6b,
	0x69, 0x74, 0x2e, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x52, 0x08, 0x70, 0x72,
	0x6f, 0x70, 0x6f, 0x73, 0x65, 0x72, 0x12, 0x2c, 0x0a, 0x12, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f,
	0x76, 0x6f, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x10, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x56, 0x6f, 0x74, 0x69, 0x6e, 0x67, 0x50,
	0x6f, 0x77, 0x65, 0x72, 0x22, 0xe8, 0x01, 0x0a, 0x09, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74,
	0x6f, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x2b, 0x0a, 0x07,
	0x70, 0x75, 0x62, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e,
	0x72, 0x6f, 0x6c, 0x6c, 0x6b, 0x69, 0x74, 0x2e, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65,
	0x79, 0x52, 0x06, 0x70, 0x75, 0x62, 0x4b, 0x65, 0x79, 0x12, 0x21, 0x0a, 0x0c, 0x76, 0x6f, 0x74,
	0x69, 0x6e, 0x67, 0x5f, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0b, 0x76, 0x6f, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x12, 0x2b, 0x0a, 0x11,
	0x70, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x65, 0x72, 0x5f, 0x70, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74,
	0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x10, 0x70, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x65,
	0x72, 0x50, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x12, 0x22, 0x0a, 0x0d, 0x70, 0x75, 0x62,
	0x5f, 0x6b, 0x65, 0x79, 0x5f, 0x62, 0x79, 0x74, 0x65, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x0b, 0x70, 0x75, 0x62, 0x4b, 0x65, 0x79, 0x42, 0x79, 0x74, 0x65, 0x73, 0x12, 0x20, 0x0a,
	0x0c, 0x70, 0x75, 0x62, 0x5f, 0x6b, 0x65, 0x79, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x75, 0x62, 0x4b, 0x65, 0x79, 0x54, 0x79, 0x70, 0x65, 0x22,
	0x3c, 0x0a, 0x09, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x12, 0x1b, 0x0a, 0x09,
	0x6b, 0x65, 0x79, 0x5f, 0x62, 0x79, 0x74, 0x65, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x08, 0x6b, 0x65, 0x79, 0x42, 0x79, 0x74, 0x65, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0x77, 0x0a,
	0x08, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x19, 0x0a, 0x08, 0x63, 0x68, 0x61,
	0x69, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x68, 0x61,
	0x69, 0x6e, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x12, 0x0a, 0x04,
	0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x74, 0x69, 0x6d, 0x65,
	0x12, 0x24, 0x0a, 0x0e, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x68, 0x61,
	0x73, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0c, 0x6c, 0x61, 0x73, 0x74, 0x44, 0x61,
	0x74, 0x61, 0x48, 0x61, 0x73, 0x68, 0x22, 0x47, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x12, 0x2d,
	0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x11, 0x2e, 0x72, 0x6f, 0x6c, 0x6c, 0x6b, 0x69, 0x74, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x10, 0x0a,
	0x03, 0x74, 0x78, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x03, 0x74, 0x78, 0x73, 0x22,
	0x50, 0x0a, 0x0a, 0x54, 0x78, 0x57, 0x69, 0x74, 0x68, 0x49, 0x53, 0x52, 0x73, 0x12, 0x17, 0x0a,
	0x07, 0x70, 0x72, 0x65, 0x5f, 0x69, 0x73, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06,
	0x70, 0x72, 0x65, 0x49, 0x73, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x74, 0x78, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x02, 0x74, 0x78, 0x12, 0x19, 0x0a, 0x08, 0x70, 0x6f, 0x73, 0x74, 0x5f, 0x69,
	0x73, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x70, 0x6f, 0x73, 0x74, 0x49, 0x73,
	0x72, 0x42, 0x2d, 0x5a, 0x2b, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f,
	0x72, 0x6f, 0x6c, 0x6c, 0x6b, 0x69, 0x74, 0x2f, 0x72, 0x6f, 0x6c, 0x6c, 0x6b, 0x69, 0x74, 0x2f,
	0x74, 0x79, 0x70, 0x65, 0x73, 0x2f, 0x70, 0x62, 0x2f, 0x72, 0x6f, 0x6c, 0x6c, 0x6b, 0x69, 0x74,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
})

var file_rollkit_rollkit_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_rollkit_rollkit_proto_goTypes = []any{
	(*Version)(nil),      // 0: rollkit.Version
	(*Header)(nil),       // 1: rollkit.Header
	(*SignedHeader)(nil), // 2: rollkit.SignedHeader
	(*ValidatorSet)(nil), // 3: rollkit.ValidatorSet
	(*Validator)(nil),    // 4: rollkit.Validator
	(*PublicKey)(nil),    // 5: rollkit.PublicKey
	(*Metadata)(nil),     // 6: rollkit.Metadata
	(*Data)(nil),         // 7: rollkit.Data
	(*TxWithISRs)(nil),   // 8: rollkit.TxWithISRs
}
var file_rollkit_rollkit_proto_depIdxs = []int32{
	0, // 0: rollkit.Header.version:type_name -> rollkit.Version
	1, // 1: rollkit.SignedHeader.header:type_name -> rollkit.Header
	3, // 2: rollkit.SignedHeader.validators:type_name -> rollkit.ValidatorSet
	4, // 3: rollkit.ValidatorSet.validators:type_name -> rollkit.Validator
	4, // 4: rollkit.ValidatorSet.proposer:type_name -> rollkit.Validator
	5, // 5: rollkit.Validator.pub_key:type_name -> rollkit.PublicKey
	6, // 6: rollkit.Data.metadata:type_name -> rollkit.Metadata
	7, // [7:7] is the sub-list for method output_type
	7, // [7:7] is the sub-list for method input_type
	7, // [7:7] is the sub-list for extension type_name
	7, // [7:7] is the sub-list for extension extendee
	0, // [0:7] is the sub-list for field type_name
}

func init() { file_rollkit_rollkit_proto_init() }
func file_rollkit_rollkit_proto_init() {
	if File_rollkit_rollkit_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_rollkit_rollkit_proto_rawDesc), len(file_rollkit_rollkit_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_rollkit_rollkit_proto_goTypes,
		DependencyIndexes: file_rollkit_rollkit_proto_depIdxs,
		MessageInfos:      file_rollkit_rollkit_proto_msgTypes,
	}.Build()
	File_rollkit_rollkit_proto = out.File
	file_rollkit_rollkit_proto_goTypes = nil
	file_rollkit_rollkit_proto_depIdxs = nil
}
