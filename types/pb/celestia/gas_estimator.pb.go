// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: celestia/gas_estimator.proto

package celestia

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// TxPriority is the priority level of the requested gas price.
// The following priority levels are defined:
// - High Priority: The gas price is the price at the start of the top 10% of
// transactionsâ€™ gas prices from the last 5 blocks.
// - Medium Priority: The gas price is the mean of all gas prices from the last
// 5 blocks.
// - Low Priority: The gas price is the value at the end of the lowest 10% of
// gas prices from the last 5 blocks.
// - Unspecified Priority (default): This is equivalent to the Medium priority,
// using the mean of all gas prices from the last 5 blocks.
type TxPriority int32

const (
	// TX_PRIORITY_UNSPECIFIED none priority, the default priority level, which is
	// equivalent to the TX_PRIORITY_MEDIUM priority.
	TxPriority_TX_PRIORITY_UNSPECIFIED TxPriority = 0
	// TX_PRIORITY_LOW low priority.
	TxPriority_TX_PRIORITY_LOW TxPriority = 1
	// TX_PRIORITY_MEDIUM medium priority.
	TxPriority_TX_PRIORITY_MEDIUM TxPriority = 2
	// TX_PRIORITY_HIGH high priority.
	TxPriority_TX_PRIORITY_HIGH TxPriority = 3
)

// Enum value maps for TxPriority.
var (
	TxPriority_name = map[int32]string{
		0: "TX_PRIORITY_UNSPECIFIED",
		1: "TX_PRIORITY_LOW",
		2: "TX_PRIORITY_MEDIUM",
		3: "TX_PRIORITY_HIGH",
	}
	TxPriority_value = map[string]int32{
		"TX_PRIORITY_UNSPECIFIED": 0,
		"TX_PRIORITY_LOW":         1,
		"TX_PRIORITY_MEDIUM":      2,
		"TX_PRIORITY_HIGH":        3,
	}
)

func (x TxPriority) Enum() *TxPriority {
	p := new(TxPriority)
	*p = x
	return p
}

func (x TxPriority) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TxPriority) Descriptor() protoreflect.EnumDescriptor {
	return file_celestia_gas_estimator_proto_enumTypes[0].Descriptor()
}

func (TxPriority) Type() protoreflect.EnumType {
	return &file_celestia_gas_estimator_proto_enumTypes[0]
}

func (x TxPriority) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TxPriority.Descriptor instead.
func (TxPriority) EnumDescriptor() ([]byte, []int) {
	return file_celestia_gas_estimator_proto_rawDescGZIP(), []int{0}
}

// EstimateGasPriceRequest the request to estimate the gas price of the network.
// Takes a priority enum to define the priority level.
type EstimateGasPriceRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TxPriority    TxPriority             `protobuf:"varint,1,opt,name=tx_priority,json=txPriority,proto3,enum=celestia.TxPriority" json:"tx_priority,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EstimateGasPriceRequest) Reset() {
	*x = EstimateGasPriceRequest{}
	mi := &file_celestia_gas_estimator_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EstimateGasPriceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EstimateGasPriceRequest) ProtoMessage() {}

func (x *EstimateGasPriceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_celestia_gas_estimator_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EstimateGasPriceRequest.ProtoReflect.Descriptor instead.
func (*EstimateGasPriceRequest) Descriptor() ([]byte, []int) {
	return file_celestia_gas_estimator_proto_rawDescGZIP(), []int{0}
}

func (x *EstimateGasPriceRequest) GetTxPriority() TxPriority {
	if x != nil {
		return x.TxPriority
	}
	return TxPriority_TX_PRIORITY_UNSPECIFIED
}

// EstimateGasPriceResponse the response of the gas price estimation.
type EstimateGasPriceResponse struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	EstimatedGasPrice float64                `protobuf:"fixed64,1,opt,name=estimated_gas_price,json=estimatedGasPrice,proto3" json:"estimated_gas_price,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *EstimateGasPriceResponse) Reset() {
	*x = EstimateGasPriceResponse{}
	mi := &file_celestia_gas_estimator_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EstimateGasPriceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EstimateGasPriceResponse) ProtoMessage() {}

func (x *EstimateGasPriceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_celestia_gas_estimator_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EstimateGasPriceResponse.ProtoReflect.Descriptor instead.
func (*EstimateGasPriceResponse) Descriptor() ([]byte, []int) {
	return file_celestia_gas_estimator_proto_rawDescGZIP(), []int{1}
}

func (x *EstimateGasPriceResponse) GetEstimatedGasPrice() float64 {
	if x != nil {
		return x.EstimatedGasPrice
	}
	return 0
}

// EstimateGasPriceAndUsageRequest the request to estimate the gas price of the
// network and also the gas used for the provided transaction.
type EstimateGasPriceAndUsageRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TxPriority    TxPriority             `protobuf:"varint,1,opt,name=tx_priority,json=txPriority,proto3,enum=celestia.TxPriority" json:"tx_priority,omitempty"`
	TxBytes       []byte                 `protobuf:"bytes,2,opt,name=tx_bytes,json=txBytes,proto3" json:"tx_bytes,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EstimateGasPriceAndUsageRequest) Reset() {
	*x = EstimateGasPriceAndUsageRequest{}
	mi := &file_celestia_gas_estimator_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EstimateGasPriceAndUsageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EstimateGasPriceAndUsageRequest) ProtoMessage() {}

func (x *EstimateGasPriceAndUsageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_celestia_gas_estimator_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EstimateGasPriceAndUsageRequest.ProtoReflect.Descriptor instead.
func (*EstimateGasPriceAndUsageRequest) Descriptor() ([]byte, []int) {
	return file_celestia_gas_estimator_proto_rawDescGZIP(), []int{2}
}

func (x *EstimateGasPriceAndUsageRequest) GetTxPriority() TxPriority {
	if x != nil {
		return x.TxPriority
	}
	return TxPriority_TX_PRIORITY_UNSPECIFIED
}

func (x *EstimateGasPriceAndUsageRequest) GetTxBytes() []byte {
	if x != nil {
		return x.TxBytes
	}
	return nil
}

// EstimateGasPriceAndUsageResponse the response of the gas price and used
// estimation.
type EstimateGasPriceAndUsageResponse struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	EstimatedGasPrice float64                `protobuf:"fixed64,1,opt,name=estimated_gas_price,json=estimatedGasPrice,proto3" json:"estimated_gas_price,omitempty"`
	EstimatedGasUsed  uint64                 `protobuf:"varint,2,opt,name=estimated_gas_used,json=estimatedGasUsed,proto3" json:"estimated_gas_used,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *EstimateGasPriceAndUsageResponse) Reset() {
	*x = EstimateGasPriceAndUsageResponse{}
	mi := &file_celestia_gas_estimator_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EstimateGasPriceAndUsageResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EstimateGasPriceAndUsageResponse) ProtoMessage() {}

func (x *EstimateGasPriceAndUsageResponse) ProtoReflect() protoreflect.Message {
	mi := &file_celestia_gas_estimator_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EstimateGasPriceAndUsageResponse.ProtoReflect.Descriptor instead.
func (*EstimateGasPriceAndUsageResponse) Descriptor() ([]byte, []int) {
	return file_celestia_gas_estimator_proto_rawDescGZIP(), []int{3}
}

func (x *EstimateGasPriceAndUsageResponse) GetEstimatedGasPrice() float64 {
	if x != nil {
		return x.EstimatedGasPrice
	}
	return 0
}

func (x *EstimateGasPriceAndUsageResponse) GetEstimatedGasUsed() uint64 {
	if x != nil {
		return x.EstimatedGasUsed
	}
	return 0
}

var File_celestia_gas_estimator_proto protoreflect.FileDescriptor

const file_celestia_gas_estimator_proto_rawDesc = "" +
	"\n" +
	"\x1ccelestia/gas_estimator.proto\x12\bcelestia\"P\n" +
	"\x17EstimateGasPriceRequest\x125\n" +
	"\vtx_priority\x18\x01 \x01(\x0e2\x14.celestia.TxPriorityR\n" +
	"txPriority\"J\n" +
	"\x18EstimateGasPriceResponse\x12.\n" +
	"\x13estimated_gas_price\x18\x01 \x01(\x01R\x11estimatedGasPrice\"s\n" +
	"\x1fEstimateGasPriceAndUsageRequest\x125\n" +
	"\vtx_priority\x18\x01 \x01(\x0e2\x14.celestia.TxPriorityR\n" +
	"txPriority\x12\x19\n" +
	"\btx_bytes\x18\x02 \x01(\fR\atxBytes\"\x80\x01\n" +
	" EstimateGasPriceAndUsageResponse\x12.\n" +
	"\x13estimated_gas_price\x18\x01 \x01(\x01R\x11estimatedGasPrice\x12,\n" +
	"\x12estimated_gas_used\x18\x02 \x01(\x04R\x10estimatedGasUsed*l\n" +
	"\n" +
	"TxPriority\x12\x1b\n" +
	"\x17TX_PRIORITY_UNSPECIFIED\x10\x00\x12\x13\n" +
	"\x0fTX_PRIORITY_LOW\x10\x01\x12\x16\n" +
	"\x12TX_PRIORITY_MEDIUM\x10\x02\x12\x14\n" +
	"\x10TX_PRIORITY_HIGH\x10\x032\xe0\x01\n" +
	"\fGasEstimator\x12[\n" +
	"\x10EstimateGasPrice\x12!.celestia.EstimateGasPriceRequest\x1a\".celestia.EstimateGasPriceResponse\"\x00\x12s\n" +
	"\x18EstimateGasPriceAndUsage\x12).celestia.EstimateGasPriceAndUsageRequest\x1a*.celestia.EstimateGasPriceAndUsageResponse\"\x00B.Z,github.com/rollkit/rollkit/types/pb/celestiab\x06proto3"

var (
	file_celestia_gas_estimator_proto_rawDescOnce sync.Once
	file_celestia_gas_estimator_proto_rawDescData []byte
)

func file_celestia_gas_estimator_proto_rawDescGZIP() []byte {
	file_celestia_gas_estimator_proto_rawDescOnce.Do(func() {
		file_celestia_gas_estimator_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_celestia_gas_estimator_proto_rawDesc), len(file_celestia_gas_estimator_proto_rawDesc)))
	})
	return file_celestia_gas_estimator_proto_rawDescData
}

var file_celestia_gas_estimator_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_celestia_gas_estimator_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_celestia_gas_estimator_proto_goTypes = []any{
	(TxPriority)(0),                          // 0: celestia.TxPriority
	(*EstimateGasPriceRequest)(nil),          // 1: celestia.EstimateGasPriceRequest
	(*EstimateGasPriceResponse)(nil),         // 2: celestia.EstimateGasPriceResponse
	(*EstimateGasPriceAndUsageRequest)(nil),  // 3: celestia.EstimateGasPriceAndUsageRequest
	(*EstimateGasPriceAndUsageResponse)(nil), // 4: celestia.EstimateGasPriceAndUsageResponse
}
var file_celestia_gas_estimator_proto_depIdxs = []int32{
	0, // 0: celestia.EstimateGasPriceRequest.tx_priority:type_name -> celestia.TxPriority
	0, // 1: celestia.EstimateGasPriceAndUsageRequest.tx_priority:type_name -> celestia.TxPriority
	1, // 2: celestia.GasEstimator.EstimateGasPrice:input_type -> celestia.EstimateGasPriceRequest
	3, // 3: celestia.GasEstimator.EstimateGasPriceAndUsage:input_type -> celestia.EstimateGasPriceAndUsageRequest
	2, // 4: celestia.GasEstimator.EstimateGasPrice:output_type -> celestia.EstimateGasPriceResponse
	4, // 5: celestia.GasEstimator.EstimateGasPriceAndUsage:output_type -> celestia.EstimateGasPriceAndUsageResponse
	4, // [4:6] is the sub-list for method output_type
	2, // [2:4] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_celestia_gas_estimator_proto_init() }
func file_celestia_gas_estimator_proto_init() {
	if File_celestia_gas_estimator_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_celestia_gas_estimator_proto_rawDesc), len(file_celestia_gas_estimator_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_celestia_gas_estimator_proto_goTypes,
		DependencyIndexes: file_celestia_gas_estimator_proto_depIdxs,
		EnumInfos:         file_celestia_gas_estimator_proto_enumTypes,
		MessageInfos:      file_celestia_gas_estimator_proto_msgTypes,
	}.Build()
	File_celestia_gas_estimator_proto = out.File
	file_celestia_gas_estimator_proto_goTypes = nil
	file_celestia_gas_estimator_proto_depIdxs = nil
}
