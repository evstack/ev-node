// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: evnode/v1/batch.proto

package v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Batch is a collection of transactions.
type Batch struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Txs           [][]byte               `protobuf:"bytes,1,rep,name=txs,proto3" json:"txs,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Batch) Reset() {
	*x = Batch{}
	mi := &file_evnode_v1_batch_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Batch) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Batch) ProtoMessage() {}

func (x *Batch) ProtoReflect() protoreflect.Message {
	mi := &file_evnode_v1_batch_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Batch.ProtoReflect.Descriptor instead.
func (*Batch) Descriptor() ([]byte, []int) {
	return file_evnode_v1_batch_proto_rawDescGZIP(), []int{0}
}

func (x *Batch) GetTxs() [][]byte {
	if x != nil {
		return x.Txs
	}
	return nil
}

// DirectTX a TX that submitted directly to the DA
type DirectTX struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	Tx              []byte                 `protobuf:"bytes,1,opt,name=tx,proto3" json:"tx,omitempty"`
	Id              []byte                 `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	FirstSeenHeight uint64                 `protobuf:"varint,3,opt,name=first_seen_height,json=firstSeenHeight,proto3" json:"first_seen_height,omitempty"`
	FirstSeenTime   int64                  `protobuf:"varint,4,opt,name=first_seen_time,json=firstSeenTime,proto3" json:"first_seen_time,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *DirectTX) Reset() {
	*x = DirectTX{}
	mi := &file_evnode_v1_batch_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DirectTX) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DirectTX) ProtoMessage() {}

func (x *DirectTX) ProtoReflect() protoreflect.Message {
	mi := &file_evnode_v1_batch_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DirectTX.ProtoReflect.Descriptor instead.
func (*DirectTX) Descriptor() ([]byte, []int) {
	return file_evnode_v1_batch_proto_rawDescGZIP(), []int{1}
}

func (x *DirectTX) GetTx() []byte {
	if x != nil {
		return x.Tx
	}
	return nil
}

func (x *DirectTX) GetId() []byte {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *DirectTX) GetFirstSeenHeight() uint64 {
	if x != nil {
		return x.FirstSeenHeight
	}
	return 0
}

func (x *DirectTX) GetFirstSeenTime() int64 {
	if x != nil {
		return x.FirstSeenTime
	}
	return 0
}

var File_evnode_v1_batch_proto protoreflect.FileDescriptor

const file_evnode_v1_batch_proto_rawDesc = "" +
	"\n" +
	"\x15evnode/v1/batch.proto\x12\tevnode.v1\"\x19\n" +
	"\x05Batch\x12\x10\n" +
	"\x03txs\x18\x01 \x03(\fR\x03txs\"~\n" +
	"\bDirectTX\x12\x0e\n" +
	"\x02tx\x18\x01 \x01(\fR\x02tx\x12\x0e\n" +
	"\x02id\x18\x02 \x01(\fR\x02id\x12*\n" +
	"\x11first_seen_height\x18\x03 \x01(\x04R\x0ffirstSeenHeight\x12&\n" +
	"\x0ffirst_seen_time\x18\x04 \x01(\x03R\rfirstSeenTimeB/Z-github.com/evstack/ev-node/types/pb/evnode/v1b\x06proto3"

var (
	file_evnode_v1_batch_proto_rawDescOnce sync.Once
	file_evnode_v1_batch_proto_rawDescData []byte
)

func file_evnode_v1_batch_proto_rawDescGZIP() []byte {
	file_evnode_v1_batch_proto_rawDescOnce.Do(func() {
		file_evnode_v1_batch_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_evnode_v1_batch_proto_rawDesc), len(file_evnode_v1_batch_proto_rawDesc)))
	})
	return file_evnode_v1_batch_proto_rawDescData
}

var file_evnode_v1_batch_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_evnode_v1_batch_proto_goTypes = []any{
	(*Batch)(nil),    // 0: evnode.v1.Batch
	(*DirectTX)(nil), // 1: evnode.v1.DirectTX
}
var file_evnode_v1_batch_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_evnode_v1_batch_proto_init() }
func file_evnode_v1_batch_proto_init() {
	if File_evnode_v1_batch_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_evnode_v1_batch_proto_rawDesc), len(file_evnode_v1_batch_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_evnode_v1_batch_proto_goTypes,
		DependencyIndexes: file_evnode_v1_batch_proto_depIdxs,
		MessageInfos:      file_evnode_v1_batch_proto_msgTypes,
	}.Build()
	File_evnode_v1_batch_proto = out.File
	file_evnode_v1_batch_proto_goTypes = nil
	file_evnode_v1_batch_proto_depIdxs = nil
}
