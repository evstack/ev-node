# Tests / Code Coverage workflow
# This workflow is triggered by ci_release.yml workflow
name: Tests / Code Coverage
on:
  workflow_call:
    inputs:
      image-tag:
        required: true
        type: string

jobs:
  build-docker-image:
    name: Build Docker Image
    # skip building images for merge groups as they are already built on PRs and main
    if: github.event_name != 'merge_group'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image with PR tag
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ghcr.io/${{ github.repository_owner }}/rollkit:${{ inputs.image-tag }}

  upgrade-tests:
    needs: build-docker-image
    runs-on: ubuntu-latest
    steps:
      - run: exit 0 # TODO: add upgrade test uses the image built in the build-docker-image step

  build_all-apps:
    name: Build All Rollkit Binaries
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: set up go
        uses: actions/setup-go@v5
        with:
          go-version-file: ./go.mod
      - name: Build all rollkit binaries
        run: make build-all

  go_mod_tidy_check:
    name: Go Mod Tidy Check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version-file: ./go.mod
      - run: make tidy-all
      - name: check for diff
        run: git diff --exit-code

  unit_test:
    name: Run Unit Tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: set up go
        uses: actions/setup-go@v5
        with:
          go-version-file: ./go.mod
      - name: Run unit test
        run: make test-cover
      - name: upload coverage report
        uses: codecov/codecov-action@v5.4.3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: ./coverage.txt

  e2e-tests:
    name: Run E2E System Tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: set up go
        uses: actions/setup-go@v5
        with:
          go-version-file: ./go.mod
      - name: E2E Tests
        run: make test-e2e

  evm-tests:
    name: Run EVM Execution Tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: set up go
        uses: actions/setup-go@v5
        with:
          go-version-file: ./go.mod
      - name: EVM Tests
        run: make test-evm
